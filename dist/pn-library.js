/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["PN"] = factory();
	else
		root["PN"] = factory();
})(self, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/dom/dom.js":
/*!************************!*\
  !*** ./src/dom/dom.js ***!
  \************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ProgressID: () => (/* binding */ ProgressID),\n/* harmony export */   audioElements: () => (/* binding */ audioElements),\n/* harmony export */   canvasElements: () => (/* binding */ canvasElements),\n/* harmony export */   createAudio: () => (/* binding */ createAudio),\n/* harmony export */   createCanvas: () => (/* binding */ createCanvas),\n/* harmony export */   createProgressBar: () => (/* binding */ createProgressBar),\n/* harmony export */   progressBarElements: () => (/* binding */ progressBarElements)\n/* harmony export */ });\n// dom.js\n\nvar canvasElements = [];\nvar audioElements = [];\nvar progressBarElements = [];\nvar ProgressID = 0;\n/**\n * Create a new canvas element and append it to the DOM.\n * Maintain a reference to the created canvas.\n * @param {Object} options - Options for the canvas (width, height, etc.)\n * @returns {HTMLCanvasElement} The created canvas element\n */\nfunction createCanvas() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    width: 800,\n    height: 600\n  };\n  var canvas = document.createElement(\"canvas\");\n  canvas.width = options.width;\n  canvas.height = options.height;\n  document.body.appendChild(canvas);\n  canvasElements.push(canvas);\n  return canvas;\n}\n\n/**\n * Create a new audio input element and append it to the DOM.\n * Maintain a reference to the created audio input.\n * @returns {HTMLAudioElement} The created audio element\n */\nfunction createAudio() {\n  var audio = document.createElement(\"audio\");\n  audio.controls = true;\n  document.body.appendChild(audio);\n  audioElements.push(audio);\n  return audio;\n}\nfunction createProgressBar() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    max: 100,\n    value: 0,\n    id: \"\"\n  };\n  var progressBarContainer = document.createElement(\"div\");\n  progressBarContainer.style.position = \"relative\";\n  progressBarContainer.style.width = \"100%\";\n  progressBarContainer.style.height = \"20px\";\n  progressBarContainer.style.backgroundColor = \"#e0e0e0\";\n  var progressBar = document.createElement(\"div\");\n  progressBar.style.position = \"absolute\";\n  progressBar.style.height = \"100%\";\n  progressBar.style.width = \"\".concat(options.value, \"%\");\n  progressBar.style.backgroundColor = \"#76c7c0\";\n  if (options.id) {\n    progressBar.id = options.id;\n    ProgressID = options.id;\n  }\n  progressBarContainer.appendChild(progressBar);\n  document.body.appendChild(progressBarContainer);\n  progressBarElements.push(progressBar);\n  return progressBar;\n}\n\n//# sourceURL=webpack://PN/./src/dom/dom.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EncoderProgress: () => (/* reexport safe */ _wave_encoder_js__WEBPACK_IMPORTED_MODULE_3__.EncoderProgress),\n/* harmony export */   InterweaveProgressCH1: () => (/* reexport safe */ _wave_encoder_js__WEBPACK_IMPORTED_MODULE_3__.InterweaveProgressCH1),\n/* harmony export */   InterweaveProgressCH2: () => (/* reexport safe */ _wave_encoder_js__WEBPACK_IMPORTED_MODULE_3__.InterweaveProgressCH2),\n/* harmony export */   PN: () => (/* reexport safe */ _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   ProcessorProgress: () => (/* reexport safe */ _input_wavProcessor_js__WEBPACK_IMPORTED_MODULE_7__.ProcessorProgress),\n/* harmony export */   audioElements: () => (/* reexport safe */ _dom_dom_js__WEBPACK_IMPORTED_MODULE_6__.audioElements),\n/* harmony export */   canvasElements: () => (/* reexport safe */ _dom_dom_js__WEBPACK_IMPORTED_MODULE_6__.canvasElements),\n/* harmony export */   createAudio: () => (/* reexport safe */ _dom_dom_js__WEBPACK_IMPORTED_MODULE_6__.createAudio),\n/* harmony export */   createCanvas: () => (/* reexport safe */ _dom_dom_js__WEBPACK_IMPORTED_MODULE_6__.createCanvas),\n/* harmony export */   createNote: () => (/* reexport safe */ _wave_player_js__WEBPACK_IMPORTED_MODULE_2__.createNote),\n/* harmony export */   createProgressBar: () => (/* reexport safe */ _dom_dom_js__WEBPACK_IMPORTED_MODULE_6__.createProgressBar),\n/* harmony export */   createSong: () => (/* reexport safe */ _wave_player_js__WEBPACK_IMPORTED_MODULE_2__.createSong),\n/* harmony export */   instrument: () => (/* reexport safe */ _instruments_instrumentSelector_js__WEBPACK_IMPORTED_MODULE_1__.instrument),\n/* harmony export */   readWavFile: () => (/* reexport safe */ _input_wavProcessor_js__WEBPACK_IMPORTED_MODULE_7__.readWavFile),\n/* harmony export */   save: () => (/* reexport safe */ _output_wav_js__WEBPACK_IMPORTED_MODULE_4__.save),\n/* harmony export */   setDuration: () => (/* reexport safe */ _wave_setProperties_js__WEBPACK_IMPORTED_MODULE_5__.setDuration),\n/* harmony export */   setHarmonic: () => (/* reexport safe */ _wave_setProperties_js__WEBPACK_IMPORTED_MODULE_5__.setHarmonic),\n/* harmony export */   setVolume: () => (/* reexport safe */ _wave_setProperties_js__WEBPACK_IMPORTED_MODULE_5__.setVolume),\n/* harmony export */   singVoice: () => (/* reexport safe */ _wave_player_js__WEBPACK_IMPORTED_MODULE_2__.singVoice),\n/* harmony export */   yinReadWavFile: () => (/* reexport safe */ _input_yinWavProcessor_js__WEBPACK_IMPORTED_MODULE_8__.yinReadWavFile)\n/* harmony export */ });\n/* harmony import */ var _pn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pn.js */ \"./src/pn.js\");\n/* harmony import */ var _instruments_instrumentSelector_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instruments/instrumentSelector.js */ \"./src/instruments/instrumentSelector.js\");\n/* harmony import */ var _wave_player_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./wave/player.js */ \"./src/wave/player.js\");\n/* harmony import */ var _wave_encoder_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./wave/encoder.js */ \"./src/wave/encoder.js\");\n/* harmony import */ var _output_wav_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./output/wav.js */ \"./src/output/wav.js\");\n/* harmony import */ var _wave_setProperties_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./wave/setProperties.js */ \"./src/wave/setProperties.js\");\n/* harmony import */ var _dom_dom_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dom/dom.js */ \"./src/dom/dom.js\");\n/* harmony import */ var _input_wavProcessor_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./input/wavProcessor.js */ \"./src/input/wavProcessor.js\");\n/* harmony import */ var _input_yinWavProcessor_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./input/yinWavProcessor.js */ \"./src/input/yinWavProcessor.js\");\n// index.js - The entry point file for Webpack\n\n // Import the base PN object\n // Add PN.instrument method\n// Import other functions\n\n\n\n\n\n\n\n\n// Attach PN and other functions to the global window object to make them accessible\n\n\n\n//# sourceURL=webpack://PN/./src/index.js?");

/***/ }),

/***/ "./src/input/fft.js":
/*!**************************!*\
  !*** ./src/input/fft.js ***!
  \**************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   analyzeFrequencies: () => (/* binding */ analyzeFrequencies)\n/* harmony export */ });\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n// Function to pad data to the next power of 2\nfunction padToPowerOfTwo(data) {\n  var nextPowerOfTwo = Math.pow(2, Math.ceil(Math.log2(data.length)));\n  var paddedData = new Array(nextPowerOfTwo).fill(0);\n  for (var i = 0; i < data.length; i++) {\n    paddedData[i] = data[i];\n  }\n  return paddedData;\n}\n\n// Function to perform FFT (recursive implementation)\nfunction fft(data) {\n  var n = data.length;\n  if (n <= 1) return data;\n\n  // Separate even and odd terms\n  var even = fft(data.filter(function (_, i) {\n    return i % 2 === 0;\n  }));\n  var odd = fft(data.filter(function (_, i) {\n    return i % 2 !== 0;\n  }));\n  var results = new Array(n).fill(0).map(function () {\n    return [0, 0];\n  });\n  for (var k = 0; k < n / 2; k++) {\n    var expTerm = -2 * Math.PI * k / n;\n    var cosine = Math.cos(expTerm);\n    var sine = Math.sin(expTerm);\n\n    // Calculate the real and imaginary parts\n    var real = cosine * odd[k][0] - sine * odd[k][1];\n    var imag = sine * odd[k][0] + cosine * odd[k][1];\n    results[k] = [even[k][0] + real, even[k][1] + imag];\n    results[k + n / 2] = [even[k][0] - real, even[k][1] - imag];\n  }\n  return results;\n}\n\n// Function to compute magnitudes from FFT output\nfunction computeMagnitudes(fftData) {\n  return fftData.map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      real = _ref2[0],\n      imag = _ref2[1];\n    return Math.sqrt(Math.pow(real, 2) + Math.pow(imag, 2));\n  });\n}\n\n// Function to calculate RMS for volume estimation\nfunction calculateRMS(data) {\n  var sumSquares = 0;\n  for (var i = 0; i < data.length; i++) {\n    sumSquares += data[i] * data[i];\n  }\n  return Math.sqrt(sumSquares / data.length);\n}\n\n// Function to analyze frequencies and volume in audio data\nfunction analyzeFrequencies(data, sampleRate) {\n  // Step 1: Pad data to the next power of 2\n  var paddedData = padToPowerOfTwo(data);\n\n  // Step 2: Convert padded data to complex format (real, imaginary) for FFT\n  var complexData = paddedData.map(function (value) {\n    return [value, 0];\n  });\n\n  // Step 3: Perform FFT on the complex data\n  var fftData = fft(complexData);\n\n  // Step 4: Calculate magnitudes\n  var magnitudes = computeMagnitudes(fftData);\n\n  // Step 5: Calculate frequencies\n  var frequencies = magnitudes.map(function (_, index) {\n    return index * sampleRate / paddedData.length;\n  });\n\n  // Step 6: Find the frequency with the highest magnitude (dominant frequency)\n  var maxIndex = 0;\n  for (var i = 1; i < magnitudes.length; i++) {\n    if (magnitudes[i] > magnitudes[maxIndex]) {\n      maxIndex = i;\n    }\n  }\n  var dominantFrequency = frequencies[maxIndex];\n\n  // Step 7: Calculate the volume using RMS\n  var volume = calculateRMS(data);\n\n  // Step 8: Calculate the chunk duration in seconds\n  var duration = data.length / sampleRate;\n  return {\n    dominantFrequency: dominantFrequency,\n    volume: volume,\n    duration: duration\n  };\n}\n\n//# sourceURL=webpack://PN/./src/input/fft.js?");

/***/ }),

/***/ "./src/input/parseStringInput.js":
/*!***************************************!*\
  !*** ./src/input/parseStringInput.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var js_yaml__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! js-yaml */ \"./node_modules/js-yaml/dist/js-yaml.mjs\");\n\nfunction parseSongInput(songData) {\n  return songData;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (parseSongInput);\n\n//# sourceURL=webpack://PN/./src/input/parseStringInput.js?");

/***/ }),

/***/ "./src/input/wavProcessor.js":
/*!***********************************!*\
  !*** ./src/input/wavProcessor.js ***!
  \***********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ProcessorProgress: () => (/* binding */ ProcessorProgress),\n/* harmony export */   parseWav: () => (/* binding */ parseWav),\n/* harmony export */   processAudioData: () => (/* binding */ processAudioData),\n/* harmony export */   readWavFile: () => (/* binding */ readWavFile)\n/* harmony export */ });\n/* harmony import */ var _input_fft_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../input/fft.js */ \"./src/input/fft.js\");\n/* harmony import */ var _dom_dom_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dom/dom.js */ \"./src/dom/dom.js\");\n// wavProcessor.js\n\n\nvar ProcessorProgress = 0;\n/**\n * Reads a WAV file from the provided URL, parses it, and processes the audio data.\n * @param {string} url - The URL of the WAV file to read.\n */\nfunction readWavFile(url, callback) {\n  fetch(url).then(function (response) {\n    return response.arrayBuffer();\n  }).then(function (buffer) {\n    var wavData = parseWav(buffer); // Parse the WAV file\n    var sampleRate = wavData.sampleRate;\n    var audioData = wavData.samples;\n\n    //console.log(\"WAV file parsed successfully\");\n    //console.log(\"Sample Rate: \", sampleRate);\n    //console.log(\"Number of samples: \", audioData.length);\n\n    var allVoiceFrequencies = processAudioData(audioData, sampleRate, 2);\n    //console.log(\"Voice F : \", voiceFrequencies);\n\n    if (callback) {\n      callback(allVoiceFrequencies); // Pass voiceFrequencies to the callback\n    }\n  })[\"catch\"](function (err) {\n    console.error(\"Error loading WAV file: \", err);\n  });\n}\n\n/**\n * Parses WAV file data from an ArrayBuffer.\n * @param {ArrayBuffer} buffer - The WAV file buffer.\n * @returns {Object} Parsed WAV data including sample rate and audio samples.\n */\nfunction parseWav(buffer) {\n  var view = new DataView(buffer);\n  var numChannels = view.getUint16(22, true);\n  var sampleRate = view.getUint32(24, true);\n  var bitsPerSample = view.getUint16(34, true);\n  var dataOffset = 44; // WAV header size (assumes no additional sub-chunks)\n  var bytesPerSample = bitsPerSample / 8;\n  var numSamples = Math.floor((view.byteLength - dataOffset) / (numChannels * bytesPerSample));\n\n  //console.log(\"Num Channels: \", numChannels);\n  //console.log(\"Sample Rate: \", sampleRate);\n  //console.log(\"Bits Per Sample: \", bitsPerSample);\n  //console.log(\"Number of Samples: \", numSamples);\n\n  var samples = new Float32Array(numSamples);\n  for (var i = 0; i < numSamples; i++) {\n    var sample = 0;\n    var sampleIndex = dataOffset + i * numChannels * bytesPerSample;\n\n    // Ensure we are not reading beyond the available buffer length\n    if (sampleIndex >= buffer.byteLength) {\n      console.error(\"Sample index exceeds buffer length at sample\", i);\n      break;\n    }\n\n    // If stereo, take only the left channel (instead of averaging)\n    if (numChannels === 2) {\n      var left = view.getInt16(sampleIndex, true);\n      sample = left;\n    } else {\n      sample = view.getInt16(sampleIndex, true);\n    }\n\n    // Normalize to [-1, 1] range\n    samples[i] = sample / 32768;\n  }\n  return {\n    sampleRate: sampleRate,\n    samples: samples\n  };\n}\n\n/**\n * @param {Float32Array} audioData - The audio data samples.\n * @param {number} sampleRate - The sample rate of the audio data.\n */\nfunction processAudioData(audioData, sampleRate, n) {\n  var chunkSize = 11025; // Adjusted chunk size for more effective analysis\n  var numChunks = Math.ceil(audioData.length / chunkSize);\n\n  // First loop: Process chunks from 0, 44100, 88200, ...\n  var results = [];\n  var ProcessorProgressCounter = 0;\n  for (var offsetMultiplier = 0; offsetMultiplier < n; offsetMultiplier++) {\n    var offset = 4410 * offsetMultiplier;\n    var voiceFrequencies = new Map();\n    for (var i = 0; i < Math.ceil(audioData.length / chunkSize); i++) {\n      var start = i * chunkSize + offset;\n      var end = Math.min(start + chunkSize, audioData.length);\n      var chunk = audioData.slice(start, end);\n      var result = (0,_input_fft_js__WEBPACK_IMPORTED_MODULE_0__.analyzeFrequencies)(chunk, sampleRate);\n      ProcessorProgressCounter++;\n      ProcessorProgress = ProcessorProgressCounter / (n * Math.ceil(audioData.length / chunkSize)) * 100;\n      console.log(\"Processor P \".concat(ProcessorProgress));\n      if (!isNaN(result.dominantFrequency)) {\n        //console.log(`Chunk (offset ${offset}): Frequency = ${result.dominantFrequency} Hz, Volume = ${result.volume}, Duration = ${result.duration}`);\n        voiceFrequencies.set(i, [result.dominantFrequency, result.volume, result.duration]);\n      } else {\n        //console.log(`Chunk (offset ${offset}): Frequency could not be determined (NaN)`);\n      }\n    }\n    results.push(voiceFrequencies);\n  }\n  return results;\n}\nfunction updateProgressBarById(id, value) {\n  var progressBar = document.getElementById(id);\n  progressBar.style.width = \"\".concat(value, \"%\");\n}\n\n// Export functions and data for CommonJS\n\n\n//# sourceURL=webpack://PN/./src/input/wavProcessor.js?");

/***/ }),

/***/ "./src/input/yin.js":
/*!**************************!*\
  !*** ./src/input/yin.js ***!
  \**************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   yin: () => (/* binding */ yin)\n/* harmony export */ });\nvar DEFAULT_THRESHOLD = 0.07;\nfunction difference(data) {\n  var n = data.length;\n  var results = new Float32Array(n);\n  var difference;\n  var summation;\n  var windowSize = Math.floor(n * 0.5);\n  for (var tau = 0; tau <= windowSize; tau++) {\n    summation = 0;\n    for (var j = 0; j < windowSize; j++) {\n      difference = data[j] - data[j + tau];\n      summation += difference * difference;\n    }\n    results[tau] = summation;\n  }\n  return results;\n}\nfunction cumulativeMeanNormalizedDifference(data) {\n  var n = data.length;\n  var results = new Float32Array(n);\n  var summation;\n  for (var tau = 0; tau < n; tau++) {\n    summation = 0;\n    for (var j = 0; j <= tau; j++) {\n      summation += data[j];\n    }\n    results[tau] = data[tau] / (summation / tau);\n  }\n  return results;\n}\nfunction absoluteThreshold(data, threshold) {\n  var k = Number.POSITIVE_INFINITY;\n  var tau;\n  for (var i = 0, n = data.length; i < n; i++) {\n    var x = data[i];\n    if (x < threshold) {\n      return i;\n    }\n    if (x < k) {\n      k = x;\n      tau = i;\n    }\n  }\n  return tau;\n}\nfunction bestLocalEstimate(data, tau) {\n  var i = tau + 1;\n  var n = data.length;\n  var k = data[tau];\n  while (i < n && data[i] < k) {\n    k = data[i];\n    i++;\n  }\n  return i - 1;\n}\n\n// Function to calculate RMS for volume estimation\nfunction calculateRMS(data) {\n  var sumSquares = 0;\n  for (var i = 0; i < data.length; i++) {\n    sumSquares += data[i] * data[i];\n  }\n  return Math.sqrt(sumSquares / data.length);\n}\n\n/**\n * Enhanced YIN algorithm to estimate fundamental frequency, duration, and volume of audio signal\n * @param {Float32Array} data The time-domain data for the audio signal\n * @param {Number} sampleRate The sample rate\n * @param {Number} [threshold = 0.07] The threshold\n * @returns {Object} An object with frequency, volume, and chunk duration\n */\nfunction yin(data, sampleRate) {\n  var aThreshold = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_THRESHOLD;\n  // Step 1: Calculate the difference function\n  var diff = difference(data);\n\n  // Step 2: Calculate the cumulative mean normalized difference function\n  var cmnd = cumulativeMeanNormalizedDifference(diff);\n\n  // Step 3: Apply the threshold to find the first dip\n  var tau = absoluteThreshold(cmnd, aThreshold);\n  if (tau === -1) {\n    return {\n      frequency: NaN,\n      duration: 0,\n      volume: 0\n    }; // If no valid tau is found, return NaN\n  }\n\n  // Step 4: Refine the estimate using parabolic interpolation\n  var refinedTau = bestLocalEstimate(cmnd, tau);\n\n  // Step 5: Convert the refined lag into a frequency\n  var frequency = sampleRate / refinedTau;\n\n  // Step 6: Calculate the chunk's volume using RMS\n  var volume = calculateRMS(data);\n\n  // Step 7: Calculate the chunk duration in seconds\n  var duration = data.length / sampleRate;\n  return {\n    frequency: frequency,\n    volume: volume,\n    duration: duration\n  };\n}\n\n//# sourceURL=webpack://PN/./src/input/yin.js?");

/***/ }),

/***/ "./src/input/yinWavProcessor.js":
/*!**************************************!*\
  !*** ./src/input/yinWavProcessor.js ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   yinParseWav: () => (/* binding */ yinParseWav),\n/* harmony export */   yinProcessAudioData: () => (/* binding */ yinProcessAudioData),\n/* harmony export */   yinReadWavFile: () => (/* binding */ yinReadWavFile)\n/* harmony export */ });\n/* harmony import */ var _input_yin_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../input/yin.js */ \"./src/input/yin.js\");\n\nvar voiceFrequencies = new Map();\nvar volumeDuration = [];\nfunction yinReadWavFile(url, callback) {\n  fetch(url).then(function (response) {\n    return response.arrayBuffer();\n  }).then(function (buffer) {\n    var wavData = yinParseWav(buffer); // Parse the WAV file\n    var sampleRate = wavData.sampleRate;\n    var audioData = wavData.samples;\n\n    //console.log(\"WAV file parsed successfully\");\n    //console.log(\"Sample Rate: \", sampleRate);\n    //console.log(\"Number of samples: \", audioData.length);\n\n    var voiceFrequencies = yinProcessAudioData(audioData, sampleRate);\n    //console.log(\"Voice F : \", voiceFrequencies);\n\n    if (callback) {\n      callback(voiceFrequencies); // Pass voiceFrequencies to the callback\n    }\n  })[\"catch\"](function (err) {\n    console.error(\"Error loading WAV file: \", err);\n  });\n}\nfunction yinParseWav(buffer) {\n  var view = new DataView(buffer);\n\n  // WAV file parsing: Extract header info and PCM data\n  var numChannels = view.getUint16(22, true);\n  var sampleRate = view.getUint32(24, true);\n  var bitsPerSample = view.getUint16(34, true);\n  var dataOffset = 44; // WAV header size (assumes no additional sub-chunks)\n  var bytesPerSample = bitsPerSample / 8;\n  var numSamples = Math.floor((view.byteLength - dataOffset) / (numChannels * bytesPerSample));\n  console.log(\"Num Channels: \", numChannels);\n  console.log(\"Sample Rate: \", sampleRate);\n  console.log(\"Bits Per Sample: \", bitsPerSample);\n  console.log(\"Number of Samples: \", numSamples);\n  var samples = new Float32Array(numSamples);\n  for (var i = 0; i < numSamples; i++) {\n    var sample = 0;\n    var sampleIndex = dataOffset + i * numChannels * bytesPerSample;\n\n    // Ensure we are not reading beyond the available buffer length\n    if (sampleIndex >= buffer.byteLength) {\n      console.error(\"Sample index exceeds buffer length at sample\", i);\n      break;\n    }\n\n    // If stereo, take only the left channel (instead of averaging)\n    if (numChannels === 2) {\n      var left = view.getInt16(sampleIndex, true);\n      sample = left;\n    } else {\n      sample = view.getInt16(sampleIndex, true);\n    }\n\n    // Normalize to [-1, 1] range\n    samples[i] = sample / 32768;\n  }\n  return {\n    sampleRate: sampleRate,\n    samples: samples\n  };\n}\nfunction yinProcessAudioData(audioData, sampleRate) {\n  var voiceFrequencies = new Map();\n  var chunkSize = 216; // Use 11025 samples for each chunk\n  var numChunks = Math.ceil(audioData.length / chunkSize);\n  var myObj1 = [];\n  console.log(\"numChunks : \" + numChunks);\n  var currentDuration;\n  for (var i = 0; i < numChunks; i++) {\n    var start = i * chunkSize;\n    var end = Math.min(start + chunkSize, audioData.length);\n    var chunk = audioData.slice(start, end);\n\n    // Call the analyzeFrequencies function\n    // Use the enhanced YIN algorithm to get frequency, duration, and volume\n    var result = (0,_input_yin_js__WEBPACK_IMPORTED_MODULE_0__.yin)(chunk, sampleRate);\n    if (!isNaN(result.frequency)) {\n      console.log(\"Chunk \".concat(i + 1, \": Frequency = \").concat(result.frequency, \" Hz, Volume = \").concat(result.volume, \", Duration = \").concat(result.duration));\n      voiceFrequencies.set(i, [result.frequency, result.volume, result.duration]);\n    } else {\n      console.log(\"Chunk \".concat(i + 1, \": Frequency could not be determined (NaN)\"));\n    }\n  }\n  console.log(\"Voice F : \", voiceFrequencies); // This will log after processing is complete\n  return voiceFrequencies;\n}\n\n// Export functions and data for CommonJS\n\n\n//# sourceURL=webpack://PN/./src/input/yinWavProcessor.js?");

/***/ }),

/***/ "./src/instruments/envelope.js":
/*!*************************************!*\
  !*** ./src/instruments/envelope.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ADSRLinearEnvelope: () => (/* binding */ ADSRLinearEnvelope),\n/* harmony export */   ADSRLogEnvelope: () => (/* binding */ ADSRLogEnvelope),\n/* harmony export */   AcousticGuitar: () => (/* binding */ AcousticGuitar),\n/* harmony export */   Banjo: () => (/* binding */ Banjo),\n/* harmony export */   Cello: () => (/* binding */ Cello),\n/* harmony export */   EvolvingLead: () => (/* binding */ EvolvingLead),\n/* harmony export */   EvolvingLeadPad: () => (/* binding */ EvolvingLeadPad),\n/* harmony export */   FunckLead: () => (/* binding */ FunckLead),\n/* harmony export */   Organ60: () => (/* binding */ Organ60),\n/* harmony export */   PercussiveStaccatoPad: () => (/* binding */ PercussiveStaccatoPad),\n/* harmony export */   ThickBass: () => (/* binding */ ThickBass),\n/* harmony export */   Trumpet: () => (/* binding */ Trumpet),\n/* harmony export */   adsrExpEnvelope: () => (/* binding */ adsrExpEnvelope),\n/* harmony export */   ampAcousticGuitar: () => (/* binding */ ampAcousticGuitar),\n/* harmony export */   ampBanjo: () => (/* binding */ ampBanjo),\n/* harmony export */   ampCello: () => (/* binding */ ampCello),\n/* harmony export */   ampEffectedLeadPad: () => (/* binding */ ampEffectedLeadPad),\n/* harmony export */   ampEnvelope: () => (/* binding */ ampEnvelope),\n/* harmony export */   ampFunckLead: () => (/* binding */ ampFunckLead),\n/* harmony export */   ampOrgan60: () => (/* binding */ ampOrgan60),\n/* harmony export */   ampPercussiveStaccatoPad: () => (/* binding */ ampPercussiveStaccatoPad),\n/* harmony export */   ampThickBass: () => (/* binding */ ampThickBass),\n/* harmony export */   ampTrumpet: () => (/* binding */ ampTrumpet),\n/* harmony export */   envelopes: () => (/* binding */ envelopes),\n/* harmony export */   filterEnvelope: () => (/* binding */ filterEnvelope)\n/* harmony export */ });\n// envelope.js\n\n// Envelope functions control the shape of the note and how it's played\nvar envelopes = {};\nvar defaultParams = {\n  g: 1,\n  w: \"sine\",\n  t: 1,\n  f: 0,\n  v: 1,\n  a: 1,\n  h: 1,\n  d: 1,\n  s: 1,\n  r: 0,\n  p: 1,\n  q: 1,\n  k: 0\n};\n\n// ADSHR Envelope function\n\n// -- .\n//     \\\n//      \\\n// Drop envelope: cosine decay\n/*\nAttack (A): 0 (no attack phase)\nDecay (D): The entire duration is a decay phase, decaying from 1 to 0.\nSustain (S): 0 (no sustain)\nRelease (R): The function ends at 0, meaning the release is implicit.\n*/\n\nfunction ampEnvelope(time, attack, decay, sustain, release, noteDuration) {\n  attack = attack / 4;\n  decay = decay / 4;\n  sustain = sustain / 4;\n  release = release / 4;\n  if (time < attack) return time / attack; // Attack phase\n  if (time < attack + decay) return 1 - (1 - sustain) * (time - attack) / decay; // Decay phase\n  if (time < noteDuration) return sustain; // Sustain phase\n  if (time < noteDuration + release) return sustain * (1 - (time - noteDuration) / release); // Release phase\n  return 0; // After release\n}\nfunction filterEnvelope(attack, decay, sustain, release, time, duration) {\n  attack = attack / 4;\n  decay = decay / 4;\n  sustain = sustain / 4;\n  release = release / 4;\n  var minEnvelopeValue = 0.001; // Minimum envelope value to avoid cutoff = 0\n  if (time < attack) return Math.max(time / attack, minEnvelopeValue); // Attack phase\n  if (time < attack + decay) return Math.max(1 - (1 - sustain) * (time - attack) / decay, minEnvelopeValue); // Decay phase\n  return Math.max(sustain, minEnvelopeValue); // Sustain phase\n}\nfunction EvolvingLead(time, duration) {\n  var attack = 2.5;\n  var decay = 3.0;\n  var sustain = 0.35;\n  var release = 0;\n  return filterEnvelope(attack, decay, sustain, release, time, duration);\n}\nfunction EvolvingLeadPad(time, duration) {\n  var attack = 9; // Attack time in seconds\n  var decay = 2.5; // Decay time in seconds\n  var sustain = 0.35; // Sustain level (0 to 1)\n  var release = duration; // Ful\n  return filterEnvelope(attack, decay, sustain, release, time, duration);\n}\nfunction FunckLead(time, duration) {\n  var attack = 0; // Attack time in seconds\n  var decay = 0.1; // Decay time in seconds\n  var sustain = 0; // Sustain level (0%)\n  var release = 0;\n  return filterEnvelope(attack, decay, sustain, release, time, duration);\n}\nfunction ThickBass(time, duration) {\n  var attack = 0.5; // Attack time in seconds\n  var decay = 0.5; // Decay time in seconds\n  var sustain = 0; // Sustain level (0%)\n  var release = 0.4; // Release time in seconds\n  return filterEnvelope(attack, decay, sustain, release, time, duration);\n}\nfunction Organ60(time, duration) {\n  // Filter Envelope Parameters\n  var attack = 0; // Attack time in seconds\n  var decay = 0.16; // Decay time in seconds\n  var sustain = 0.34; // Sustain level (34%)\n  var release = 0; // Release time in seconds\n\n  return filterEnvelope(attack, decay, sustain, release, time, duration);\n}\nfunction PercussiveStaccatoPad(time, duration) {\n  var attack = 0; // Attack time in seconds\n  var decay = 0.5; // Decay time in seconds\n  var sustain = 0.6; // Sustain level (60%)\n  var release = 0; // Release time in seconds\n  return filterEnvelope(attack, decay, sustain, release, time, duration);\n}\nfunction Trumpet(time, duration) {\n  // Filter Envelope Parameters\n  var attack = 5.5; // Attack time in seconds\n  var decay = 1.7; // Decay time in seconds\n  var sustain = 0.18; // Sustain level (18%)\n  var release = 0.05; // Release time in seconds\n  return filterEnvelope(attack, decay, sustain, release, time, duration);\n}\nfunction Banjo(time, duration) {\n  // Filter Envelope Parameters\n  var attack = 0; // Attack time in seconds\n  var decay = 0.19; // Decay time in seconds\n  var sustain = 0; // Sustain level (0%)\n  var release = 0.19; // Release time in seconds\n  return filterEnvelope(attack, decay, sustain, release, time, duration);\n}\nfunction Cello(time, duration) {\n  // Filter Envelope Parameters\n  var attack = 0; // Attack time in seconds\n  var decay = 3.29; // Decay time in seconds\n  var sustain = 0.78; // Sustain level (0%)\n  var release = duration; // Release time in seconds\n  return filterEnvelope(attack, decay, sustain, release, time, duration);\n}\nfunction AcousticGuitar(time, duration) {\n  var attack = 0; // Attack time in seconds\n  var decay = 3.35; // Decay time in seconds\n  var sustain = 0; // Sustain level (0%)\n  var release = 0.29; // Release time in seconds\n  return filterEnvelope(attack, decay, sustain, release, time, duration);\n}\n\n/*-----------------------------------------------------------------------------*/\n\nfunction ampFunckLead(time, duration) {\n  // Amplifier Envelope Parameters\n  var attack = 0;\n  var decay = 0;\n  var sustain = 1; // Full sustain\n  var release = 0;\n  return ampEnvelope(time, attack, decay, sustain, release, duration);\n}\nfunction ampEffectedLeadPad(time, duration) {\n  var attack = 0;\n  var decay = 0;\n  var sustain = 1; // Full sustain\n  var release = duration; // Full release time\n  return ampEnvelope(time, attack, decay, sustain, release, duration);\n}\nfunction ampThickBass(time, duration) {\n  var attack = 0; // Attack time in seconds\n  var decay = 0; // Decay time in seconds\n  var sustain = 1; // Full sustain\n  var release = 0.4; // Release time in seconds\n  return ampEnvelope(time, attack, decay, sustain, release, duration);\n}\nfunction ampPercussiveStaccatoPad(time, duration) {\n  var attack = 0;\n  var decay = 0;\n  var sustain = 1;\n  var release = 5;\n  return ampEnvelope(time, attack, decay, sustain, release, duration);\n}\nfunction ampOrgan60(time, duration) {\n  // Amplifier Envelope Parameters\n  var attack = 0; // Attack time in seconds\n  var decay = 0; // Decay time in seconds\n  var sustain = 1; // Full sustain\n  var release = 0.17; // Release time in seconds\n  return ampEnvelope(time, attack, decay, sustain, release, duration);\n}\nfunction ampTrumpet(time, duration) {\n  var attack = 0; // Attack time in seconds\n  var decay = 0; // Decay time in seconds\n  var sustain = 1; // Full sustain\n  var release = 1;\n  return ampEnvelope(time, attack, decay, sustain, release, duration);\n}\nfunction ampBanjo(time, duration) {\n  var attack = 0; // Attack time in seconds\n  var decay = 0.67; // Decay time in seconds\n  var sustain = 0; // Sustain level (0%)\n  var release = 0.67; // Release time in seconds\n  return ampEnvelope(time, attack, decay, sustain, release, duration);\n}\nfunction ampCello(time, duration) {\n  var attack = 0.06; // Attack time in seconds\n  var decay = duration; // Decay time in seconds\n  var sustain = 1; // Sustain level (0%)\n  var release = 0.3; // Release time in seconds\n  return ampEnvelope(time, attack, decay, sustain, release, duration);\n}\nfunction ampAcousticGuitar(time, duration) {\n  var attack = 0; // Attack time in seconds\n  var decay = 1.7; // Decay time in seconds\n  var sustain = 0; // Sustain level (0%)\n  var release = 1.7; // Release time in seconds\n  return ampEnvelope(time, attack, decay, sustain, release, duration);\n}\nfunction adsrExpEnvelope(t, duration, params) {\n  var a = params.a,\n    d = params.d,\n    h = params.h,\n    s = params.s,\n    r = params.r;\n  a *= duration;\n  d *= duration;\n  h *= duration;\n  r *= duration;\n  var expScale = function expScale(x, min, max) {\n    return (Math.exp((x - min) / (max - min)) - 1) / (Math.exp(1) - 1);\n  };\n  var amplitude = 0;\n  if (t <= a) {\n    // Exponential attack\n    amplitude = expScale(t, 0, a);\n  } else if (t <= a + d) {\n    // Exponential decay\n    amplitude = 1 - expScale(t - a, 0, d) * (1 - s);\n  } else if (t <= a + d + h) {\n    amplitude = s; // Sustain remains constant\n  } else if (t <= a + d + h + r) {\n    // Exponential release\n    amplitude = s * (1 - expScale(t - (a + d + h), 0, r));\n  } else {\n    amplitude = 0;\n  }\n  return amplitude;\n}\nfunction ADSRLogEnvelope(t, duration, params) {\n  var a = params.a,\n    d = params.d,\n    h = params.h,\n    s = params.s,\n    r = params.r;\n  a *= duration;\n  d *= duration;\n  h *= duration;\n  r *= duration;\n  var logScale = function logScale(x, min, max) {\n    return Math.log10(1 + 9 * (x - min) / (max - min));\n  };\n  var amplitude = 0;\n  if (t <= a) {\n    // Logarithmic attack\n    amplitude = logScale(t, 0, a);\n  } else if (t <= a + d) {\n    // Logarithmic decay\n    amplitude = 1 - logScale(t - a, 0, d) * (1 - s);\n  } else if (t <= a + d + h) {\n    amplitude = s; // Sustain remains constant\n  } else if (t <= a + d + h + r) {\n    // Logarithmic release\n    amplitude = s * (1 - logScale(t - (a + d + h), 0, r));\n  } else {\n    amplitude = 0;\n  }\n  return amplitude;\n}\nfunction ADSRLinearEnvelope(t, duration, params) {\n  var a = params.a,\n    d = params.d,\n    h = params.h,\n    s = params.s,\n    r = params.r,\n    k = params.k,\n    v = params.v,\n    g = params.g,\n    f = params.f;\n  a = a / 4;\n  d = d / 4;\n  s = s / 4;\n  r = r / 4;\n  a *= duration;\n  d *= duration;\n  h *= duration;\n  r *= duration;\n  var amplitude = 0;\n  if (t <= a) {\n    amplitude = t / a;\n  } else if (t <= a + d) {\n    amplitude = 1 - (t - a) / d * (1 - s);\n  } else if (t <= a + d + h) {\n    amplitude = s;\n  } else if (t <= a + d + h + r) {\n    amplitude = s * (1 - (t - (a + d + h)) / r);\n  } else {\n    amplitude = 0;\n  }\n  return amplitude * v;\n}\nenvelopes[\"ampEnvelope\"] = ampEnvelope;\nenvelopes[\"ampThickBass\"] = ampThickBass;\nenvelopes[\"ThickBass\"] = ThickBass;\nenvelopes[\"ampPercussiveStaccatoPad\"] = ampPercussiveStaccatoPad;\nenvelopes[\"PercussiveStaccatoPad\"] = PercussiveStaccatoPad;\nenvelopes[\"ampOrgan60\"] = ampOrgan60;\nenvelopes[\"Organ60\"] = Organ60;\nenvelopes[\"Trumpet\"] = Trumpet;\nenvelopes[\"ampTrumpet\"] = ampTrumpet;\nenvelopes[\"Banjo\"] = Banjo;\nenvelopes[\"ampBanjo\"] = ampBanjo;\nenvelopes[\"ampCello\"] = ampCello;\nenvelopes[\"Cello\"] = Cello;\nenvelopes[\"AcousticGuitar\"] = AcousticGuitar;\nenvelopes[\"ampAcousticGuitar\"] = ampAcousticGuitar;\n\n\n//# sourceURL=webpack://PN/./src/instruments/envelope.js?");

/***/ }),

/***/ "./src/instruments/instrumentSelector.js":
/*!***********************************************!*\
  !*** ./src/instruments/instrumentSelector.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   instrument: () => (/* binding */ instrument)\n/* harmony export */ });\n/* harmony import */ var _pn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../pn.js */ \"./src/pn.js\");\n/* harmony import */ var _instruments_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instruments.js */ \"./src/instruments/instruments.js\");\n// instrumentSelector.js\n\n\n // Assuming you have an Instruments class defined\n\n// Helper to select an instrument\nfunction instrument(instrumentName) {\n  switch (instrumentName.toLowerCase()) {\n    case \"trumpet\":\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentInstrument = new _instruments_js__WEBPACK_IMPORTED_MODULE_1__.Instruments().Trumpet();\n      break;\n    case \"thickbass\":\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentInstrument = new _instruments_js__WEBPACK_IMPORTED_MODULE_1__.Instruments().ThickBass();\n      break;\n    case \"funcklead\":\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentInstrument = new _instruments_js__WEBPACK_IMPORTED_MODULE_1__.Instruments().FunckLead();\n      break;\n    case \"organ60\":\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentInstrument = new _instruments_js__WEBPACK_IMPORTED_MODULE_1__.Instruments().Organ60();\n      break;\n    case \"banjo\":\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentInstrument = new _instruments_js__WEBPACK_IMPORTED_MODULE_1__.Instruments().Banjo();\n      break;\n    case \"cello\":\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentInstrument = new _instruments_js__WEBPACK_IMPORTED_MODULE_1__.Instruments().Cello();\n      break;\n    case \"acousticguitar\":\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentInstrument = new _instruments_js__WEBPACK_IMPORTED_MODULE_1__.Instruments().AcousticGuitar();\n      break;\n    default:\n      console.log(\"Instrument not found!\");\n      return;\n  }\n  console.log(\"Selected instrument: \".concat(instrumentName));\n}\n\n\n//# sourceURL=webpack://PN/./src/instruments/instrumentSelector.js?");

/***/ }),

/***/ "./src/instruments/instruments.js":
/*!****************************************!*\
  !*** ./src/instruments/instruments.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Instruments: () => (/* binding */ Instruments)\n/* harmony export */ });\n/* harmony import */ var _pn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../pn.js */ \"./src/pn.js\");\n/* harmony import */ var _envelope_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./envelope.js */ \"./src/instruments/envelope.js\");\n/* harmony import */ var _wave_harmonic_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../wave/harmonic.js */ \"./src/wave/harmonic.js\");\n/* harmony import */ var _wave_filter_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../wave/filter.js */ \"./src/wave/filter.js\");\n/* harmony import */ var _wave_lowFrequency_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../wave/lowFrequency.js */ \"./src/wave/lowFrequency.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n//instruments.js\n\n // Assuming drop is an envelope function\n\n\n\nvar Instruments = /*#__PURE__*/function () {\n  function Instruments() {\n    _classCallCheck(this, Instruments);\n  }\n  return _createClass(Instruments, [{\n    key: \"ThickBass\",\n    value: function ThickBass() {\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].frequency = 110;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].harmonic1 = _wave_harmonic_js__WEBPACK_IMPORTED_MODULE_2__.sawtooth;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].harmonic2 = _wave_harmonic_js__WEBPACK_IMPORTED_MODULE_2__.square;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].step = -12;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filter = _wave_filter_js__WEBPACK_IMPORTED_MODULE_3__.LpThickBass;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filterEnv = _envelope_js__WEBPACK_IMPORTED_MODULE_1__.ThickBass;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].lfoWave = _wave_lowFrequency_js__WEBPACK_IMPORTED_MODULE_4__.LfThickBass;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].glideTime = 0.08;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].multiplier = 1;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentInstrumentName = \"ThickBass\";\n      return _envelope_js__WEBPACK_IMPORTED_MODULE_1__.ampThickBass;\n    }\n  }, {\n    key: \"FunckLead\",\n    value: function FunckLead() {\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].frequency = 440;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].harmonic1 = _wave_harmonic_js__WEBPACK_IMPORTED_MODULE_2__.sawtooth;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].harmonic2 = _wave_harmonic_js__WEBPACK_IMPORTED_MODULE_2__.sawtooth;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].step = 5;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filter = _wave_filter_js__WEBPACK_IMPORTED_MODULE_3__.LpFunckLead;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filterEnv = _envelope_js__WEBPACK_IMPORTED_MODULE_1__.FunckLead;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].lfoWave = _wave_lowFrequency_js__WEBPACK_IMPORTED_MODULE_4__.LfFunckLead;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].glideTime = 0.1;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].multiplier = 1;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentInstrumentName = \"FunckLead\";\n      return _envelope_js__WEBPACK_IMPORTED_MODULE_1__.ampFunckLead;\n    }\n  }, {\n    key: \"PercussiveStaccatoPad\",\n    value: function PercussiveStaccatoPad() {\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].frequency = 440;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].harmonic1 = _wave_harmonic_js__WEBPACK_IMPORTED_MODULE_2__.sawtooth;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].harmonic2 = _wave_harmonic_js__WEBPACK_IMPORTED_MODULE_2__.square;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].step = -12;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filter = _wave_filter_js__WEBPACK_IMPORTED_MODULE_3__.LpPercussiveStaccatoPad;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filterEnv = _envelope_js__WEBPACK_IMPORTED_MODULE_1__.PercussiveStaccatoPad;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].lfoWave = _wave_lowFrequency_js__WEBPACK_IMPORTED_MODULE_4__.LfPercussiveStaccatoPad;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].glideTime = 0.00001;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].multiplier = 1;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].noiseLevel = 0.02;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].noiseState = true;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentInstrumentName = \"PercussiveStaccatoPad\";\n      return _envelope_js__WEBPACK_IMPORTED_MODULE_1__.ampPercussiveStaccatoPad;\n    }\n  }, {\n    key: \"Organ60\",\n    value: function Organ60() {\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].frequency = 440;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].harmonic1 = _wave_harmonic_js__WEBPACK_IMPORTED_MODULE_2__.triangle;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].harmonic2 = _wave_harmonic_js__WEBPACK_IMPORTED_MODULE_2__.triangle;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].step = -12;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filter = _wave_filter_js__WEBPACK_IMPORTED_MODULE_3__.LpOrgan60;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filterEnv = _envelope_js__WEBPACK_IMPORTED_MODULE_1__.Organ60;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].lfoWave = _wave_lowFrequency_js__WEBPACK_IMPORTED_MODULE_4__.LfOrgan60;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].glideTime = 0.00001;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].multiplier = 1;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].noiseLevel = 0.02;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].noiseState = true;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentInstrumentName = \"Organ60\";\n      return _envelope_js__WEBPACK_IMPORTED_MODULE_1__.ampOrgan60;\n    }\n  }, {\n    key: \"Trumpet\",\n    value: function Trumpet() {\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].frequency = 440;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].harmonic1 = _wave_harmonic_js__WEBPACK_IMPORTED_MODULE_2__.sawtooth;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].harmonic2 = _wave_harmonic_js__WEBPACK_IMPORTED_MODULE_2__.sawtooth;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].step = 7;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filter = _wave_filter_js__WEBPACK_IMPORTED_MODULE_3__.LpTrumpet;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filterEnv = _envelope_js__WEBPACK_IMPORTED_MODULE_1__.Trumpet;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].lfoWave = _wave_lowFrequency_js__WEBPACK_IMPORTED_MODULE_4__.LfTrumpet;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].glideTime = 0.00001;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].multiplier = 1;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].noiseLevel = 0;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].noiseState = false;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentInstrumentName = \"Trumpet\";\n      return _envelope_js__WEBPACK_IMPORTED_MODULE_1__.ampTrumpet;\n    }\n  }, {\n    key: \"Banjo\",\n    value: function Banjo() {\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].frequency = 440;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].harmonic1 = _wave_harmonic_js__WEBPACK_IMPORTED_MODULE_2__.pulseWave;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].harmonic2 = _wave_harmonic_js__WEBPACK_IMPORTED_MODULE_2__.pulseWave;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].step = 5;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filter = _wave_filter_js__WEBPACK_IMPORTED_MODULE_3__.LpDefault;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filter2 = _wave_filter_js__WEBPACK_IMPORTED_MODULE_3__.LpDefault;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].width1 = 0.2;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].width2 = 0.1;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filterEnv = _envelope_js__WEBPACK_IMPORTED_MODULE_1__.Banjo;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].lfoWave = _wave_lowFrequency_js__WEBPACK_IMPORTED_MODULE_4__.LfBanjo;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].glideTime = 0.00001;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].multiplier = 1;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].noiseLevel = 0;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].noiseState = false;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ratio = [1, 0.8, 1];\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentInstrumentName = \"Banjo\";\n      return _envelope_js__WEBPACK_IMPORTED_MODULE_1__.ampBanjo;\n    }\n  }, {\n    key: \"Cello\",\n    value: function Cello() {\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].frequency = 440;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].harmonic1 = _wave_harmonic_js__WEBPACK_IMPORTED_MODULE_2__.sawtooth;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].harmonic2 = _wave_harmonic_js__WEBPACK_IMPORTED_MODULE_2__.square;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].step = 5;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filter = _wave_filter_js__WEBPACK_IMPORTED_MODULE_3__.LpDefault;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filter2 = _wave_filter_js__WEBPACK_IMPORTED_MODULE_3__.LpDefault;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].width1 = 0.2;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].width2 = 0.1;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filterEnv = _envelope_js__WEBPACK_IMPORTED_MODULE_1__.Cello;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].lfoWave = _wave_lowFrequency_js__WEBPACK_IMPORTED_MODULE_4__.LfCello;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].glideTime = 0.00001;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].multiplier = 1;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].noiseLevel = 0;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].noiseState = false;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ratio = [1, 1, 1];\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentInstrumentName = \"Cello\";\n      return _envelope_js__WEBPACK_IMPORTED_MODULE_1__.ampCello;\n    }\n  }, {\n    key: \"AcousticGuitar2\",\n    value: function AcousticGuitar2() {\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].frequency = 440;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].harmonic1 = _wave_harmonic_js__WEBPACK_IMPORTED_MODULE_2__.pulseWave;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].harmonic2 = _wave_harmonic_js__WEBPACK_IMPORTED_MODULE_2__.pulseWave;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].step = 10;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filter = _wave_filter_js__WEBPACK_IMPORTED_MODULE_3__.LpCello;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filter2 = _wave_filter_js__WEBPACK_IMPORTED_MODULE_3__.LpCello;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].width1 = 0.25;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].width2 = 0.1;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filterEnv = _envelope_js__WEBPACK_IMPORTED_MODULE_1__.Cello;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].lfoWave = _wave_lowFrequency_js__WEBPACK_IMPORTED_MODULE_4__.LfDefault;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].glideTime = 0.00001;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].multiplier = 1;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].noiseLevel = 0;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].noiseState = false;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ratio = [1, 0.9, 1];\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentInstrumentName = \"AcousticGuitar\";\n      return _envelope_js__WEBPACK_IMPORTED_MODULE_1__.ampAcousticGuitar;\n    }\n  }, {\n    key: \"AcousticGuitar\",\n    value: function AcousticGuitar() {\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].frequency = 440;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].harmonic1 = _wave_harmonic_js__WEBPACK_IMPORTED_MODULE_2__.pulseWave;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].harmonic2 = _wave_harmonic_js__WEBPACK_IMPORTED_MODULE_2__.pulseWave;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].step = 10;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filter = _wave_filter_js__WEBPACK_IMPORTED_MODULE_3__.LpDefault;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filter2 = _wave_filter_js__WEBPACK_IMPORTED_MODULE_3__.LpDefault;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].width1 = 0.25;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].width2 = 0.1;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filterEnv = _envelope_js__WEBPACK_IMPORTED_MODULE_1__.AcousticGuitar;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].lfoWave = _wave_lowFrequency_js__WEBPACK_IMPORTED_MODULE_4__.LfDefault;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].glideTime = 0.00001;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].multiplier = 1;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].noiseLevel = 0;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].noiseState = false;\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ratio = [1, 0.9, 1];\n      _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentInstrumentName = \"AcousticGuitar\";\n      return _envelope_js__WEBPACK_IMPORTED_MODULE_1__.ampAcousticGuitar;\n    }\n  }]);\n}();\n\n//# sourceURL=webpack://PN/./src/instruments/instruments.js?");

/***/ }),

/***/ "./src/output/channels.js":
/*!********************************!*\
  !*** ./src/output/channels.js ***!
  \********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   foureo: () => (/* binding */ foureo),\n/* harmony export */   mono: () => (/* binding */ mono),\n/* harmony export */   stereo: () => (/* binding */ stereo)\n/* harmony export */ });\n/* harmony import */ var _pn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../pn.js */ \"./src/pn.js\");\n/* harmony import */ var _wave_encoder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../wave/encoder.js */ \"./src/wave/encoder.js\");\n\n\n\n// Create the stereo output by interleaving two channels (left and right)\n\n// Create the stereo output by interleaving two channels (left and right)\nfunction mono() {\n  var c1 = _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].songDataOutput;\n  return c1;\n}\nfunction foureo() {\n  var c1 = _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].songDataOutput;\n  return c1;\n}\nfunction stereo() {\n  var leftChannel = _wave_encoder_js__WEBPACK_IMPORTED_MODULE_1__.LeftChannel;\n  var rightChannel = _wave_encoder_js__WEBPACK_IMPORTED_MODULE_1__.RightChannel;\n  return {\n    leftChannel: leftChannel,\n    rightChannel: rightChannel\n  };\n}\n\n\n//# sourceURL=webpack://PN/./src/output/channels.js?");

/***/ }),

/***/ "./src/output/wav.js":
/*!***************************!*\
  !*** ./src/output/wav.js ***!
  \***************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   save: () => (/* binding */ save)\n/* harmony export */ });\n/* harmony import */ var _pn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../pn.js */ \"./src/pn.js\");\n/* harmony import */ var _channels_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./channels.js */ \"./src/output/channels.js\");\n\n\n\n// Function to create WAV header using Uint8Array\nfunction writeWaveHeader(dataLength, sampleRate) {\n  var numChannels = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2;\n  var bitsPerSample = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 16;\n  var byteRate = sampleRate * numChannels * bitsPerSample / 8;\n  var blockAlign = numChannels * bitsPerSample / 8;\n\n  // Uint8Array with a size of 44 bytes for the header\n  var buffer = new Uint8Array(44);\n  var view = new DataView(buffer.buffer);\n\n  // \"RIFF\" chunk descriptor\n  buffer.set([82, 73, 70, 70], 0); // \"RIFF\"\n  view.setUint32(4, 36 + dataLength, false); // Chunk size\n  buffer.set([87, 65, 86, 69], 8); // \"WAVE\"\n\n  // \"fmt \" sub-chunk\n  buffer.set([102, 109, 116, 32], 12); // \"fmt \"\n  view.setUint32(16, 16, true); // Subchunk1Size (16 for PCM)\n  view.setUint16(20, 1, true); // AudioFormat (1 for PCM)\n  view.setUint16(22, numChannels, true); // NumChannels\n  view.setUint32(24, sampleRate, true); // SampleRate\n  view.setUint32(28, byteRate, true); // ByteRate\n  view.setUint16(32, blockAlign, true); // BlockAlign\n  view.setUint16(34, bitsPerSample, true); // BitsPerSample\n\n  // \"data\" sub-chunk\n  buffer.set([100, 97, 116, 97], 36); // \"data\"\n  view.setUint32(40, dataLength, false); // Subchunk2Size (data length)\n\n  return buffer;\n}\n\n// Function to save WAV file\nfunction save() {\n  var fileName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"play-noise-\".concat(_pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentInstrumentName);\n  var sampleRate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 44100;\n  var volume = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 5000;\n  var _stereo = (0,_channels_js__WEBPACK_IMPORTED_MODULE_1__.stereo)(),\n    leftChannel = _stereo.leftChannel,\n    rightChannel = _stereo.rightChannel; // Get stereo audio data\n  var bitsPerSample = 16;\n  var numChannels = 2; // Stereo\n\n  var maxVolume = 32767;\n  var volumeScale = maxVolume / volume;\n\n  // Ensure both channels have the same length\n  var dataLength = leftChannel.length;\n\n  // Create buffer for audio data (2 bytes per sample per channel)\n  var buffer = new Uint8Array(dataLength * numChannels * 2);\n  var view = new DataView(buffer.buffer);\n  for (var i = 0; i < dataLength; i++) {\n    var leftSample = Math.max(-1, Math.min(1, leftChannel[i] * volumeScale));\n    var rightSample = Math.max(-1, Math.min(1, rightChannel[i] * volumeScale));\n    var leftIntSample = Math.floor(leftSample * 32767);\n    var rightIntSample = Math.floor(rightSample * 32767);\n\n    // Write samples for left and right channels\n    view.setInt16(i * 4, leftIntSample, true); // Left channel\n    view.setInt16(i * 4 + 2, rightIntSample, true); // Right channel\n  }\n\n  // Create WAV header\n  var waveHeader = writeWaveHeader(buffer.length, sampleRate, numChannels, bitsPerSample);\n\n  // Combine header and audio data into one buffer\n  var wavFile = new Uint8Array(waveHeader.length + buffer.length);\n  wavFile.set(waveHeader, 0);\n  wavFile.set(buffer, waveHeader.length);\n\n  // Create a Blob from the WAV data\n  var blob = new Blob([wavFile], {\n    type: \"audio/wav\"\n  });\n\n  // Create a download link and trigger it\n  var a = document.createElement(\"a\");\n  a.href = URL.createObjectURL(blob);\n  a.download = \"\".concat(fileName, \".wav\");\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n  console.log(\"WAV file saved as \".concat(fileName));\n}\n\n//# sourceURL=webpack://PN/./src/output/wav.js?");

/***/ }),

/***/ "./src/pn.js":
/*!*******************!*\
  !*** ./src/pn.js ***!
  \*******************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _pitchFrequencies_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pitchFrequencies.json */ \"./src/pitchFrequencies.json\");\n/* harmony import */ var _instruments_envelope_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instruments/envelope.js */ \"./src/instruments/envelope.js\");\n/* harmony import */ var _wave_harmonic_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./wave/harmonic.js */ \"./src/wave/harmonic.js\");\n/* harmony import */ var _wave_lowFrequency_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./wave/lowFrequency.js */ \"./src/wave/lowFrequency.js\");\n/* harmony import */ var _wave_filter_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./wave/filter.js */ \"./src/wave/filter.js\");\n// pn.js\n\n\n\n\n\nvar PN = {\n  currentInstrument: null,\n  pitchFrequencies: _pitchFrequencies_json__WEBPACK_IMPORTED_MODULE_0__,\n  duration: 0.5,\n  // Default duration in seconds\n  volume: 0.2,\n  // Default volume level\n  harmonic1: _wave_harmonic_js__WEBPACK_IMPORTED_MODULE_2__.sine,\n  // Default harmonic function\n  harmonic2: _wave_harmonic_js__WEBPACK_IMPORTED_MODULE_2__.sine,\n  songDataOutput: null,\n  key: \"C5#\",\n  step: 1,\n  filter: null,\n  filter2: _wave_filter_js__WEBPACK_IMPORTED_MODULE_4__.LpDefault,\n  width1: 0,\n  width2: 0,\n  filterEnv: null,\n  lfoWave: null,\n  glideTime: null,\n  semiTone: null,\n  multipliyer: 1,\n  noiseLevel: 0,\n  noiseState: false,\n  ratio: [1, 1, 2],\n  currentInstrumentName: null\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PN);\n\n//# sourceURL=webpack://PN/./src/pn.js?");

/***/ }),

/***/ "./src/wave/encoder.js":
/*!*****************************!*\
  !*** ./src/wave/encoder.js ***!
  \*****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EncoderProgress: () => (/* binding */ EncoderProgress),\n/* harmony export */   InterweaveProgressCH1: () => (/* binding */ InterweaveProgressCH1),\n/* harmony export */   InterweaveProgressCH2: () => (/* binding */ InterweaveProgressCH2),\n/* harmony export */   LeftChannel: () => (/* binding */ LeftChannel),\n/* harmony export */   Note: () => (/* binding */ Note),\n/* harmony export */   RightChannel: () => (/* binding */ RightChannel),\n/* harmony export */   Tune: () => (/* binding */ Tune)\n/* harmony export */ });\n/* harmony import */ var _synth_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./synth.js */ \"./src/wave/synth.js\");\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t[\"return\"] || t[\"return\"](); } finally { if (u) throw o; } } }; }\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n\n\nvar LeftChannel;\nvar RightChannel;\n// Define pitch and keys globally\nvar pitch = {};\nvar tuneKey = {};\nvar sharpKeys = [];\nvar flatKeys = [];\nvar EncoderProgress = 0;\nvar InterweaveProgressCH1 = 0;\nvar InterweaveProgressCH2 = 0;\n\n// Initialize pitches and keys\nsetupPitches();\nsetupKeys();\n\n// Note class representing a musical note\nvar Note = /*#__PURE__*/function () {\n  function Note() {\n    var pitch = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var accidental = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var length = arguments.length > 2 ? arguments[2] : undefined;\n    var env = arguments.length > 3 ? arguments[3] : undefined;\n    var har1 = arguments.length > 4 ? arguments[4] : undefined;\n    var har2 = arguments.length > 5 ? arguments[5] : undefined;\n    var step = arguments.length > 6 ? arguments[6] : undefined;\n    var fil = arguments.length > 7 ? arguments[7] : undefined;\n    var fil2 = arguments.length > 8 ? arguments[8] : undefined;\n    var width1 = arguments.length > 9 ? arguments[9] : undefined;\n    var width2 = arguments.length > 10 ? arguments[10] : undefined;\n    var filEnv = arguments.length > 11 ? arguments[11] : undefined;\n    var lfoWave = arguments.length > 12 ? arguments[12] : undefined;\n    var glideTime = arguments.length > 13 ? arguments[13] : undefined;\n    var vol = arguments.length > 14 ? arguments[14] : undefined;\n    var multi = arguments.length > 15 ? arguments[15] : undefined;\n    var noiseL = arguments.length > 16 ? arguments[16] : undefined;\n    var noiseS = arguments.length > 17 ? arguments[17] : undefined;\n    var ratio = arguments.length > 18 ? arguments[18] : undefined;\n    _classCallCheck(this, Note);\n    this.pitch = Array.isArray(pitch) ? pitch : [];\n    this.accidental = accidental.length ? accidental : Array(this.pitch.length).fill(0);\n    this.length = length;\n    this.env = env;\n    this.har1 = har1;\n    this.har2 = har2;\n    this.step = step;\n    this.fil = fil;\n    this.fil2 = fil2;\n    this.width1 = width1;\n    this.width2 = width2;\n    this.filEnv = filEnv;\n    this.lfoWave = lfoWave;\n    this.glideTime = glideTime;\n    this.vol = vol;\n    this.multi = multi;\n    this.noiseL = noiseL;\n    this.noiseS = noiseS;\n    this.ratio = ratio;\n  }\n  return _createClass(Note, [{\n    key: \"encodeNote\",\n    value: function encodeNote() {\n      var _this = this;\n      if (this.pitch.length === 0) {\n        return (0,_synth_js__WEBPACK_IMPORTED_MODULE_0__.rest)(this.length); // Handle rest\n      }\n      var noteDataArray = this.pitch.map(function (p, i) {\n        var adjustedPitch = p + (_this.accidental[i] || 0);\n        var frequencyValue = adjustedPitch;\n        return (0,_synth_js__WEBPACK_IMPORTED_MODULE_0__.noteData)(frequencyValue, _this.length, _this.env, _this.har1, _this.har2, _this.step, _this.fil, _this.fil2, _this.width1, _this.width2, _this.filEnv, _this.lfoWave, _this.glideTime, _this.vol, _this.multi, _this.noiseL, _this.noiseS, _this.ratio);\n      });\n      return concatNotes.apply(void 0, _toConsumableArray(noteDataArray));\n    }\n  }, {\n    key: \"encodeNote3\",\n    value: function encodeNote3() {\n      var _this2 = this;\n      if (this.pitch.length === 0) {\n        return (0,_synth_js__WEBPACK_IMPORTED_MODULE_0__.rest)(this.length); // Handle rest\n      }\n      var noteDataArray = this.pitch.map(function (p, i) {\n        var adjustedPitch = p + (_this2.accidental[i] || 0);\n        var frequencyValue = adjustedPitch;\n        return (0,_synth_js__WEBPACK_IMPORTED_MODULE_0__.noteData3)(frequencyValue, _this2.length, _this2.env, _this2.har1, _this2.har2, _this2.step, _this2.fil, _this2.fil2, _this2.width1, _this2.width2, _this2.filEnv, _this2.lfoWave, _this2.glideTime, _this2.vol, _this2.multi, _this2.noiseL, _this2.noiseS, _this2.ratio);\n      });\n      return concatNotes.apply(void 0, _toConsumableArray(noteDataArray));\n    }\n  }]);\n}();\nvar Tune = /*#__PURE__*/function () {\n  function Tune(key) {\n    var _this3 = this;\n    _classCallCheck(this, Tune);\n    this.key = key;\n    // Assign channels dynamically while maintaining numbered references\n    for (var _len = arguments.length, channels = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      channels[_key - 1] = arguments[_key];\n    }\n    this.channels = channels.map(function (ch) {\n      return _this3.ensureNotes(ch || []);\n    });\n\n    // Optionally assign numbered properties for backward compatibility\n    this.channels.forEach(function (channel, index) {\n      _this3[\"ch\".concat(index + 1)] = channel;\n    });\n  }\n\n  // Ensure that all items in the array are instances of the Note class\n  return _createClass(Tune, [{\n    key: \"ensureNotes\",\n    value: function ensureNotes(notes) {\n      return notes.map(function (note) {\n        if (note instanceof Note) {\n          return note;\n        } else {\n          return new Note(note.pitch, note.accidental, note.length, note.env, note.har, note.vol);\n        }\n      });\n    }\n  }, {\n    key: \"encode\",\n    value: function encode() {\n      var _this4 = this;\n      var acc = (0,_synth_js__WEBPACK_IMPORTED_MODULE_0__.inKey)(sharpKeys, this.key) ? 1 : (0,_synth_js__WEBPACK_IMPORTED_MODULE_0__.inKey)(flatKeys, this.key) ? -1 : 0;\n      this.channels.forEach(function (channel) {\n        channel.forEach(function (note) {\n          return adjustAccidentals(note, acc);\n        });\n      });\n      var channelData = []; // Array to hold data for all channels\n      var currentInputInstrument = (0,_synth_js__WEBPACK_IMPORTED_MODULE_0__.getInputInstrument)();\n      var numberOfChannels = 100;\n      var channels = Array.from({\n        length: numberOfChannels\n      }, function (_, i) {\n        return _this4[\"ch\".concat(i + 1)];\n      });\n      var EncoderProgressCounter = 0;\n      for (var i = 0; i < channels.length; i++) {\n        var channel = channels[i];\n        var channelEncodedData = [];\n        for (var j = 0; j < channel.length; j++) {\n          var note = channel[j];\n          //console.log(`Note ch${i + 1} ${JSON.stringify(note)}`);\n\n          var encoded = note.encodeNote();\n          channelEncodedData.push(encoded);\n          EncoderProgressCounter++;\n          EncoderProgress = EncoderProgressCounter / (channel.length * channel.length) * 100;\n          console.log(\"Encoding ch\".concat(EncoderProgress, \" %\"));\n        }\n        channelData.push(channelEncodedData);\n      }\n\n      // Flattening all channel data\n      var flattenedChannels = channelData.map(function (data) {\n        return data.flat();\n      });\n\n      // Dynamically assign flattened data to c1, c2, c3, ...\n      var _flattenedChannels = _slicedToArray(flattenedChannels, 4),\n        c1 = _flattenedChannels[0],\n        c2 = _flattenedChannels[1],\n        c3 = _flattenedChannels[2],\n        c4 = _flattenedChannels[3]; // Adjust based on the number of channels you expect\n      // Calculate maxLength dynamically based on all channels\n      var maxLength = Math.max.apply(Math, _toConsumableArray(flattenedChannels.map(function (channel) {\n        return channel.length;\n      })));\n      var overlaidData = new Array(maxLength).fill(0);\n      var InterweaveProgressCounterCH1 = 0;\n\n      // Define offsets dynamically\n      var offsets = flattenedChannels.map(function (_, i) {\n        return i * 2205;\n      });\n\n      // Overlay data for all channels1\n      for (var chanIndex = 0; chanIndex < flattenedChannels.length; chanIndex++) {\n        var offset = offsets[chanIndex];\n        var _channelData = flattenedChannels[chanIndex];\n        for (var _i = 0; _i < _channelData.length; _i++) {\n          overlaidData[_i + offset] += _channelData[_i];\n        }\n      }\n\n      //return overlaidData;\n      LeftChannel = overlaidData;\n      RightChannel = overlaidData;\n    }\n  }, {\n    key: \"encodePlane\",\n    value: function encodePlane() {\n      var acc = (0,_synth_js__WEBPACK_IMPORTED_MODULE_0__.inKey)(sharpKeys, this.key) ? 1 : (0,_synth_js__WEBPACK_IMPORTED_MODULE_0__.inKey)(flatKeys, this.key) ? -1 : 0;\n      this.ch1.forEach(function (note) {\n        return adjustAccidentals(note, acc);\n      });\n      this.ch2.forEach(function (note) {\n        return adjustAccidentals(note, acc);\n      });\n      var ch1Data = [];\n      var ch2Data = [];\n      var currentInputInstrument = (0,_synth_js__WEBPACK_IMPORTED_MODULE_0__.getInputInstrument)();\n      for (var i = 0; i < this.ch1.length; i++) {\n        var note = this.ch1[i];\n        console.log(\"Note ch1 \".concat(JSON.stringify(note)));\n        var encoded = note.encodeNote3();\n        ch1Data.push(encoded);\n        console.log(encoded);\n      }\n      for (var _i2 = 0; _i2 < this.ch2.length; _i2++) {\n        var _note = this.ch2[_i2];\n        console.log(\"Note ch2 \".concat(JSON.stringify(_note)));\n        var _encoded = _note.encodeNote3();\n        ch2Data.push(_encoded);\n      }\n\n      //    return stereo(ch1Data.flat(), ch2Data.flat());\n\n      LeftChannel = ch1Data.flat();\n      RightChannel = ch2Data.flat();\n      console.log(LeftChannel);\n      console.log(RightChannel);\n    }\n  }]);\n}();\nfunction concatNotes() {\n  for (var _len2 = arguments.length, notes = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    notes[_key2] = arguments[_key2];\n  }\n  // Check if there are any notes\n  if (notes.length === 0) return [];\n\n  // Get the length of the first note (to compare lengths of all notes)\n  var length = notes[0].length;\n\n  // Ensure all notes have the same length\n  for (var _i3 = 0, _notes = notes; _i3 < _notes.length; _i3++) {\n    var note = _notes[_i3];\n    if (note.length !== length) {\n      throw new Error(\"Length of notes are not the same\");\n    }\n  }\n\n  // Create an array to hold the concatenated result\n  var data = new Array(length).fill(0);\n\n  // Add up all the notes at each index\n  for (var i = 0; i < length; i++) {\n    var _iterator = _createForOfIteratorHelper(notes),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _note2 = _step.value;\n        data[i] += _note2[i];\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return data;\n}\n\n// Adjust accidentals for each note based on key signature\nfunction adjustAccidentals(note, acc) {\n  if (!note.pitch || !Array.isArray(note.pitch) || note.pitch.length === 0) {\n    note.pitch = [];\n  }\n  if (!note.accidental || !Array.isArray(note.accidental)) {\n    note.accidental = Array(note.pitch.length).fill(0);\n  }\n  note.accidental = note.accidental.map(function (a) {\n    return a + acc;\n  });\n}\nfunction setupPitches() {\n  var notes = [\"c\", \"d\", \"e\", \"f\", \"g\", \"a\", \"b\"];\n  var nums = [-57, -55, -53, -52, -50, -48, -46];\n  var _loop = function _loop(i) {\n    notes.forEach(function (note, j) {\n      nums[j] += 12;\n      pitch[\"\".concat(note).concat(i)] = nums[j];\n    });\n  };\n  for (var i = 1; i < 8; i++) {\n    _loop(i);\n  }\n}\n\n// Initialize the tuneKey array, which is used to apply the key signature to notes\n\nfunction setupKeys() {\n  tuneKey[\"C\"] = [];\n  var sharpKeys = [\"G\", \"D\", \"A\", \"E\", \"B\", \"F#\", \"C#\"];\n  var sharpNotes = [pitch[\"f1\"], pitch[\"c1\"], pitch[\"g1\"], pitch[\"d1\"], pitch[\"a1\"], pitch[\"e1\"], pitch[\"b1\"]];\n  sharpKeys.forEach(function (key, i) {\n    var k = [];\n    for (var j = 0; j < i + 1; j++) {\n      for (var l = 1; l < 6; l++) {\n        k.push(sharpNotes[j] + 12 * l);\n      }\n    }\n    tuneKey[key] = k;\n  });\n  var flatKeys = [\"F\", \"Bb\", \"Eb\", \"Ab\", \"Db\", \"Gb\", \"Cb\"];\n  var flatNotes = [pitch[\"b1\"], pitch[\"e1\"], pitch[\"a1\"], pitch[\"d1\"], pitch[\"g1\"], pitch[\"c1\"], pitch[\"f1\"]];\n  flatKeys.forEach(function (key, i) {\n    var k = [];\n    for (var j = 0; j < i + 1; j++) {\n      for (var l = 1; l < 6; l++) {\n        k.push(flatNotes[j] + 12 * l);\n      }\n    }\n    tuneKey[key] = k;\n  });\n}\n\n\n//# sourceURL=webpack://PN/./src/wave/encoder.js?");

/***/ }),

/***/ "./src/wave/filter.js":
/*!****************************!*\
  !*** ./src/wave/filter.js ***!
  \****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LowPassFilter: () => (/* binding */ LowPassFilter),\n/* harmony export */   LpAcousticGuitar: () => (/* binding */ LpAcousticGuitar),\n/* harmony export */   LpBanjo: () => (/* binding */ LpBanjo),\n/* harmony export */   LpBanjo2: () => (/* binding */ LpBanjo2),\n/* harmony export */   LpCello: () => (/* binding */ LpCello),\n/* harmony export */   LpDefault: () => (/* binding */ LpDefault),\n/* harmony export */   LpEvolvingLead: () => (/* binding */ LpEvolvingLead),\n/* harmony export */   LpFunckLead: () => (/* binding */ LpFunckLead),\n/* harmony export */   LpOrgan60: () => (/* binding */ LpOrgan60),\n/* harmony export */   LpPassEvolvingLead: () => (/* binding */ LpPassEvolvingLead),\n/* harmony export */   LpPercussiveStaccatoPad: () => (/* binding */ LpPercussiveStaccatoPad),\n/* harmony export */   LpThickBass: () => (/* binding */ LpThickBass),\n/* harmony export */   LpTrumpet: () => (/* binding */ LpTrumpet),\n/* harmony export */   filters: () => (/* binding */ filters)\n/* harmony export */ });\n//filter\nvar filters = {};\nfilters[\"LpPassEvolvingLead\"] = LpPassEvolvingLead;\nfilters[\"LpEvolvingLead\"] = LpEvolvingLead;\nfilters[\"LpThickBass\"] = LpThickBass;\nfilters[\"LpFunckLead\"] = LpFunckLead;\nfilters[\"LpPercussiveStaccatoPad\"] = LpPercussiveStaccatoPad;\nfilters[\"LpOrgan60\"] = LpOrgan60;\nfilters[\"LpTrumpet\"] = LpTrumpet;\nfilters[\"LpDefault\"] = LpDefault;\nfilters[\"LpCello\"] = LpCello;\nfilters[\"LpAcousticGuitar\"] = LpAcousticGuitar;\nfunction LpDefault(sample, amplitude, sampleRate, prevState) {\n  return sample;\n}\nfunction LpPassEvolvingLead(sample, amplitude, sampleRate, prevState) {\n  var cutoffFreq = 236;\n  var resonance = 0.85;\n  return LowPassFilter(sample, cutoffFreq, amplitude, sampleRate, resonance, prevState);\n}\nfunction LpEvolvingLead(sample, amplitude, sampleRate, prevState) {\n  var cutoffFreq = 472;\n  var resonance = 0.92;\n  return LowPassFilter(sample, cutoffFreq, amplitude, sampleRate, resonance, prevState);\n}\nfunction LpThickBass(sample, amplitude, sampleRate, prevState) {\n  var cutoffFreq = 170; // Low-pass filter cutoff frequency in Hz\n  var resonance = 0.65;\n  return LowPassFilter(sample, cutoffFreq, amplitude, sampleRate, resonance, prevState);\n}\nfunction LpFunckLead(sample, amplitude, sampleRate, prevState) {\n  var cutoffFreq = 7200; // Low-pass filter cutoff frequency in Hz\n  var resonance = 0.9;\n  return LowPassFilter(sample, cutoffFreq, amplitude, sampleRate, resonance, prevState);\n}\nfunction LpPercussiveStaccatoPad(sample, amplitude, sampleRate, prevState) {\n  var cutoffFreq = 220; // Low-pass filter cutoff frequency in Hz\n  var resonance = 1;\n  return LowPassFilter(sample, cutoffFreq, amplitude, sampleRate, resonance, prevState);\n}\nfunction LpOrgan60(sample, amplitude, sampleRate, prevState) {\n  var cutoffFreq = 2800; // Low-pass filter cutoff frequency in Hz\n  var resonance = 1;\n  return LowPassFilter(sample, cutoffFreq, amplitude, sampleRate, resonance, prevState);\n}\nfunction LpTrumpet(sample, amplitude, sampleRate, prevState) {\n  var cutoffFreq = 156; // Low-pass filter cutoff frequency in Hz\n  var resonance = 0.64;\n  return LowPassFilter(sample, cutoffFreq, amplitude, sampleRate, resonance, prevState);\n}\nfunction LpBanjo(sample, amplitude, sampleRate, prevState) {\n  var cutoffFreq = 2900; // Low-pass filter cutoff frequency in Hz\n  var resonance = 0.00001;\n  return LowPassFilter(sample, cutoffFreq, amplitude, sampleRate, resonance, prevState);\n}\nfunction LpBanjo2(sample, amplitude, sampleRate, prevState) {\n  var cutoffFreq = 1500; // Low-pass filter cutoff frequency in Hz\n  var resonance = 0;\n  return LowPassFilter(sample, cutoffFreq, amplitude, sampleRate, resonance, prevState);\n}\nfunction LpCello(sample, amplitude, sampleRate, prevState) {\n  var cutoffFreq = 40; // Low-pass filter cutoff frequency in Hz\n  var resonance = 1;\n  return LowPassFilter(sample, cutoffFreq, amplitude, sampleRate, resonance, prevState);\n}\nfunction LpAcousticGuitar(sample, amplitude, sampleRate, prevState) {\n  var cutoffFreq = 380; // Low-pass filter cutoff frequency in Hz\n  var resonance = 0.3;\n  return LowPassFilter(sample, cutoffFreq, amplitude, sampleRate, resonance, prevState);\n}\nfunction LowPassFilter(sample, cutoffFreq, amplitude, sampleRate, resonance, prevState) {\n  cutoffFreq = cutoffFreq * amplitude;\n  var RC = 1 / (2 * Math.PI * cutoffFreq);\n  var alpha = RC / (RC + 1 / sampleRate);\n  var filteredSample = alpha * (prevState.value + sample - resonance * prevState.resonanceGain);\n  prevState.resonanceGain = resonance * (filteredSample - prevState.value);\n  prevState.value = filteredSample;\n  return filteredSample;\n}\n\n\n//# sourceURL=webpack://PN/./src/wave/filter.js?");

/***/ }),

/***/ "./src/wave/harmonic.js":
/*!******************************!*\
  !*** ./src/wave/harmonic.js ***!
  \******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base: () => (/* binding */ base),\n/* harmony export */   first: () => (/* binding */ first),\n/* harmony export */   harmonics: () => (/* binding */ harmonics),\n/* harmony export */   pulseWave: () => (/* binding */ pulseWave),\n/* harmony export */   sawtooth: () => (/* binding */ sawtooth),\n/* harmony export */   second: () => (/* binding */ second),\n/* harmony export */   sine: () => (/* binding */ sine),\n/* harmony export */   square: () => (/* binding */ square),\n/* harmony export */   stringed: () => (/* binding */ stringed),\n/* harmony export */   third: () => (/* binding */ third),\n/* harmony export */   triangle: () => (/* binding */ triangle)\n/* harmony export */ });\n// harmonic.js\n\n// The harmonic describes the additional harmonics added to the fundamental frequency\nvar harmonics = {};\n\n// Initialize harmonics\nharmonics[\"first\"] = first;\nharmonics[\"second\"] = second;\nharmonics[\"third\"] = third;\nharmonics[\"stringed\"] = stringed;\nharmonics[\"triangle\"] = triangle;\nharmonics[\"sine\"] = sine;\nharmonics[\"square\"] = square;\nharmonics[\"sawtooth\"] = sawtooth;\nharmonics[\"pulseWave\"] = pulseWave;\n\n// Waveform functions\nfunction triangle(input) {\n  return 2 * Math.abs(2 * (input % 1) - 1) - 1;\n}\nfunction sine(input) {\n  return Math.sin(2 * Math.PI * input);\n}\nfunction square(input) {\n  return 2 * (input % 1) - 1;\n}\nfunction sawtooth(input) {\n  return 2 * (input % 1) - 1;\n}\nfunction pulseWave(frequency, time, pulseWidth) {\n  var period = 1 / frequency;\n  var phase = time % period;\n  return phase < pulseWidth * period ? 1 : -1;\n}\n\n// Base function to calculate the base frequency\nfunction base(input) {\n  return 2 * Math.PI * input;\n}\n\n// First harmonic: fundamental frequency\nfunction first(input) {\n  return Math.sin(base(input));\n}\n\n// Second harmonic: adds the second harmonic (double the base frequency)\nfunction second(input) {\n  return Math.sin(base(input)) + Math.sin(base(input) * 2);\n}\n\n// Third harmonic: adds the third harmonic (triple the base frequency)\nfunction third(input) {\n  return Math.sin(base(input)) + Math.sin(base(input) * 2) + Math.sin(base(input) * 3);\n}\nfunction triangleHarmonics(time, frequency, harmonics) {\n  var result = 0;\n  for (var n = 1; n <= harmonics; n++) {\n    // Odd harmonics only: 1, 3, 5, etc.\n    if (n % 2 === 1) {\n      var harmonicFrequency = frequency * n; // Harmonic frequency\n      var harmonicAmplitude = 1 / (n * n); // Amplitude falls off as 1/n^2 for triangle wave\n      result += harmonicAmplitude * Math.sin(2 * Math.PI * harmonicFrequency * time);\n    }\n  }\n  return result * 8 / Math.pow(Math.PI, 2); // Normalize for triangle wave\n}\n\n// Stringed instrument harmonic: complex combination of harmonics\nfunction stringed(input) {\n  return Math.sin(input) + Math.sign(Math.sin(input * 2)) * 0.5;\n}\n\n// Export the harmonics object\n\n\n//# sourceURL=webpack://PN/./src/wave/harmonic.js?");

/***/ }),

/***/ "./src/wave/lowFrequency.js":
/*!**********************************!*\
  !*** ./src/wave/lowFrequency.js ***!
  \**********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LfBanjo: () => (/* binding */ LfBanjo),\n/* harmony export */   LfCello: () => (/* binding */ LfCello),\n/* harmony export */   LfDefault: () => (/* binding */ LfDefault),\n/* harmony export */   LfEvolvingLead: () => (/* binding */ LfEvolvingLead),\n/* harmony export */   LfEvolvingLeadPad: () => (/* binding */ LfEvolvingLeadPad),\n/* harmony export */   LfFunckLead: () => (/* binding */ LfFunckLead),\n/* harmony export */   LfOrgan60: () => (/* binding */ LfOrgan60),\n/* harmony export */   LfPercussiveStaccatoPad: () => (/* binding */ LfPercussiveStaccatoPad),\n/* harmony export */   LfThickBass: () => (/* binding */ LfThickBass),\n/* harmony export */   LfTrumpet: () => (/* binding */ LfTrumpet),\n/* harmony export */   lowFrequency: () => (/* binding */ lowFrequency)\n/* harmony export */ });\nvar lowFrequency = {};\nlowFrequency[\"LfEvolvingLead\"] = LfEvolvingLead;\nlowFrequency[\"LfEvolvingLeadPad\"] = LfEvolvingLeadPad;\nlowFrequency[\"LfFunckLead\"] = LfFunckLead;\nlowFrequency[\"LfThickBass\"] = LfThickBass;\nlowFrequency[\"LfPercussiveStaccatoPad\"] = LfPercussiveStaccatoPad;\nlowFrequency[\"LfOrgan60\"] = LfOrgan60;\nlowFrequency[\"LfTrumpet\"] = LfTrumpet;\nlowFrequency[\"LfBanjo\"] = LfBanjo;\nlowFrequency[\"LfCello\"] = LfCello;\nlowFrequency[\"LfDefault\"] = LfDefault;\nfunction LfEvolvingLead(time) {\n  var frequency = 10;\n  var depth = 0.2;\n  return Math.sin(2 * Math.PI * frequency * time) * depth;\n}\nfunction LfEvolvingLeadPad(time) {\n  var frequency = 35;\n  var depth = 0.5;\n  return Math.sin(2 * Math.PI * frequency * time) * depth;\n}\nfunction LfFunckLead(time) {\n  var frequency = 18;\n  var depth = 0.2;\n  return Math.sin(2 * Math.PI * frequency * time) * depth;\n}\nfunction LfThickBass(time) {\n  var frequency = 15; // LFO frequency in Hz\n  var depth = 0.2;\n  return Math.sin(2 * Math.PI * frequency * time) * depth;\n}\nfunction LfPercussiveStaccatoPad(time) {\n  var frequency = 0.6; // LFO frequency in Hz\n  var depth = 0.2;\n  return Math.sin(2 * Math.PI * frequency * time) * depth;\n}\nfunction LfOrgan60(time) {\n  var frequency = 1; // LFO frequency in Hz\n  var depth = 0.08;\n  return Math.sin(2 * Math.PI * frequency * time) * depth;\n}\nfunction LfTrumpet(time) {\n  var frequency = 15; // LFO frequency in Hz\n  var depth = 0.15;\n  return Math.sin(2 * Math.PI * frequency * time) * depth;\n}\nfunction LfBanjo(time) {\n  var frequency = 10; // LFO frequency in Hz\n  var depth = 0.1;\n  return 2 / Math.PI * Math.asin(Math.sin(2 * Math.PI * frequency * time)) * depth;\n}\nfunction LfCello(time) {\n  var frequency = 7.5; // LFO frequency in Hz\n  var depth = 0.05;\n  return Math.sin(2 * Math.PI * frequency * time) * depth;\n}\nfunction LfDefault(time) {\n  var frequency = 7.5; // LFO frequency in Hz\n  var depth = 0.05;\n  return Math.sin(2 * Math.PI * frequency * time) * depth;\n}\n\n\n//# sourceURL=webpack://PN/./src/wave/lowFrequency.js?");

/***/ }),

/***/ "./src/wave/player.js":
/*!****************************!*\
  !*** ./src/wave/player.js ***!
  \****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNote: () => (/* binding */ createNote),\n/* harmony export */   createSong: () => (/* binding */ createSong),\n/* harmony export */   singVoice: () => (/* binding */ singVoice)\n/* harmony export */ });\n/* harmony import */ var _pn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../pn.js */ \"./src/pn.js\");\n/* harmony import */ var _encoder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./encoder.js */ \"./src/wave/encoder.js\");\n/* harmony import */ var _harmonic_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./harmonic.js */ \"./src/wave/harmonic.js\");\n/* harmony import */ var _instruments_instruments_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../instruments/instruments.js */ \"./src/instruments/instruments.js\");\n/* harmony import */ var _input_parseStringInput_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../input/parseStringInput.js */ \"./src/input/parseStringInput.js\");\n/* harmony import */ var _pitchFrequencies_json__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../pitchFrequencies.json */ \"./src/pitchFrequencies.json\");\n/* harmony import */ var _input_wavProcessor_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../input/wavProcessor.js */ \"./src/input/wavProcessor.js\");\nfunction _construct(t, e, r) { if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments); var o = [null]; o.push.apply(o, e); var p = new (t.bind.apply(t, o))(); return r && _setPrototypeOf(p, r.prototype), p; }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n2 = 0, F = function F() {}; return { s: F, n: function n() { return _n2 >= r.length ? { done: !0 } : { done: !1, value: r[_n2++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t[\"return\"] || t[\"return\"](); } finally { if (u) throw o; } } }; }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\n\n\n\n\n\n\n\nvar pitch = {\n  a4: 440,\n  c4: 423,\n  c5: 523,\n  e3: 449,\n  e4: 559,\n  e5: 659,\n  f2: 398,\n  f5: 698,\n  b4: 494,\n  b2: 294,\n  b3: 394,\n  b5: 988,\n  a3: 220,\n  a5: 880,\n  g5: 784,\n  d3: 190,\n  d4: 293,\n  c3: 131,\n  g3: 196,\n  g4: 296,\n  f3: 174,\n  f4: 274\n};\n\n/**\n * Creates a musical note with the given note name.\n * If no instrument is selected, it defaults to Piano.\n *\n * @param {string|number} noteName - The name or number of the musical note (e.g., \"A4\", \"440\").\n * @returns {Note|undefined} - A new Note instance with the specified pitch, or undefined if the note is not found.\n *\n * @example\n * // Select an instrument and create a note\n * PN.instrument('cello');    // Select piano instrument\n * const note = createNote('C4'); // Creates a note with frequency for C4\n * console.log(note);         // Logs the created note\n * PN.save();\n */\n\nfunction createNote(noteName) {\n  // Set default instrument to piano if no instrument is selected\n  if (!_pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentInstrument) {\n    console.log(\"No instrument selected, defaulting to Banjo.\");\n    _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentInstrument = new _instruments_instruments_js__WEBPACK_IMPORTED_MODULE_3__.Instruments().Banjo(); // Default to piano\n  }\n  var frequency = _pitchFrequencies_json__WEBPACK_IMPORTED_MODULE_5__[noteName];\n  if (!frequency) {\n    frequency = parseInt(noteName);\n    if (isNaN(frequency)) {\n      console.log(\"Note \".concat(noteName, \" not found!\"));\n      return;\n    }\n  }\n  if (typeof noteName === \"number\") {\n    frequency = noteName;\n  }\n  if (!frequency) {\n    console.log(\"Please enter a number or musical note\");\n    return;\n  }\n  var note = new _encoder_js__WEBPACK_IMPORTED_MODULE_1__.Note([frequency],\n  // Frequency for the note\n  [0],\n  // No accidentals\n  _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].duration,\n  // Use PN's duration\n  _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentInstrument,\n  // Use the selected instrument's envelope\n  _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].harmonic1, _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].harmonic2, _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].step, _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filter, _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filter2, _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].width1, _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].width2, _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filterEnv, _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].lfoWave, _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].glideTime, _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].volume,\n  // Use PN's volume level\n  _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].multiplier, _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].noiseLevel, _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].noiseState, _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ratio);\n  console.log(\"Created note \".concat(noteName, \" with frequency \").concat(frequency));\n  return note;\n}\n\n// Function to create a note\nfunction makeNote(noteString, section, score) {\n  var length = section.length || score.length;\n  var volume = section.volume || score.volume;\n  var instrument = section.instrument || score.instrument;\n  var harmonic = section.harmonic || score.harmonic;\n  var harmonic1 = _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].harmonic1;\n  var harmonic2 = _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].harmonic2;\n  var step = _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].step;\n  var filter = _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filter;\n  var filter2 = _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filter2;\n  var width1 = _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].width1;\n  var width2 = _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].width2;\n  var filterEnv = _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filterEnv;\n  var lfoWave = _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].lfoWave;\n  var glideTime = _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].glideTime;\n  var multiplier = _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].multiplier;\n  var noiseLevel = _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].noiseLevel;\n  var noiseState = _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].noiseState;\n  var ratio = _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ratio;\n  var note = new _encoder_js__WEBPACK_IMPORTED_MODULE_1__.Note(pitch, [], length, _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentInstrument, harmonic1, harmonic2, step, filter, filter2, width1, width2, filterEnv, lfoWave, glideTime, volume, multiplier, noiseLevel, noiseState, ratio);\n  var parts = noteString.split(\":\");\n  var noteLength = parts.length > 1 ? parseFloat(parts[0]) : 1.0;\n  var pitches = parts.length > 1 ? parts[1] : parts[0];\n  note.length *= noteLength;\n  if (pitches.includes(\"-\")) {\n    var chords = pitches.split(\"-\");\n    chords.forEach(function (chord) {\n      return process(note, chord);\n    });\n  } else {\n    process(note, pitches);\n  }\n  return note;\n}\n\n// Function to process a single note or chord\nfunction process(note, pitchStr) {\n  pitchStr = pitchStr.toUpperCase();\n  if (pitchStr === \"Z\") return; // Rest\n\n  if (pitchStr.length < 2 || pitchStr.length > 3) {\n    throw new Error(\"Invalid note structure: \".concat(pitchStr));\n  }\n  var basePitch = pitchStr.slice(0, 2);\n  if (!_pitchFrequencies_json__WEBPACK_IMPORTED_MODULE_5__[basePitch]) {\n    throw new Error(\"Note doesn't exist: \".concat(basePitch));\n  }\n  note.pitch.push(_pitchFrequencies_json__WEBPACK_IMPORTED_MODULE_5__[basePitch]);\n  var accidental = pitchStr.slice(-1);\n  if (accidental === \"#\") {\n    note.accidental.push(1);\n  } else if (accidental === \"b\") {\n    note.accidental.push(-1);\n  } else {\n    note.accidental.push(0);\n  }\n}\n\n/**\n * Creates a song based on the input data.\n * The song is constructed from a series of note strings and durations.\n * Notes are processed and encoded into a Tune instance.\n *\n * @param {Array} songData - An array of song sections and note data, in string format.\n * @returns {Array} - The encoded song data.\n *\n * @example\n * // Define song data\n * const songData = [\n *  \"ch1[1.5:A4-F5]\",\n *  \"ch2[0.5:C4]\",\n *  \"ch1[2.0:G3-E4-D4]\"\n * ];\n *\n * // Create a song\n * PN.setVolume(0.5); // Set volume level\n * const song = createSong(songData); // Create a song from the input data\n * console.log(song); // Logs the encoded song data\n */\n\n// Helper to create a song\nfunction createSong(songData) {\n  var score = (0,_input_parseStringInput_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(songData);\n  var myTune = new _encoder_js__WEBPACK_IMPORTED_MODULE_1__.Tune(score.key, [], []);\n  var _iterator = _createForOfIteratorHelper(score.sections),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var section = _step.value;\n      var _iterator2 = _createForOfIteratorHelper(section.C1),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var n = _step2.value;\n          var note = makeNote(n, section, score);\n          myTune.ch1.push(note);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      var _iterator3 = _createForOfIteratorHelper(section.C2),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _n = _step3.value;\n          var _note = makeNote(_n, section, score);\n          myTune.ch2.push(_note);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n\n    // Concatenate all notes to form the song\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  var songDataOutput = myTune.encodePlane();\n  _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].songDataOutput = songDataOutput;\n  return songDataOutput;\n}\n\n/**\n * Creates a musical note with the given note name.\n * If no instrument is selected, it defaults to Piano.\n *\n * @param {string} noteName - The name of audio file you wish to replicate.\n * @returns {File|undefined} - A new audio file instance with the specified pitch, or undefined if the note is not found.\n *\n * @example\n * // Select an instrument and create a note\n *      // Wrap everything in an async function\n *      async function runPNExample() {\n *          console.log(PN);  // This should print the PN object\n *           PN.instrument('Piano'); // Select the instrument\n *           // PN.setVolume(0.5); // Set volume (optional)\n *\n *           // Wait for PN.singVoice to complete\n *           const song = await PN.singVoice('recording2.wav');\n *\n *           console.log(\"Song created:\", song);\n *           console.log(PN.volume);  // Logs the current volume\n *               setTimeout(() => {\n *                   PN.save(); // Call save after the delay\n *                   saveLogToFile(logMessages);\n *\n *               }, 8000); // Delay in milliseconds (5000ms = 5s)\n *       }\n *\n *       // Run the function\n *       runPNExample();\n */\n\nfunction singVoice(audioFile) {\n  var numChannels = 100;\n  (0,_input_wavProcessor_js__WEBPACK_IMPORTED_MODULE_6__.readWavFile)(audioFile, function (voiceFrequencies) {\n    var skeleton = voiceFrequencies;\n    var myTune = _construct(_encoder_js__WEBPACK_IMPORTED_MODULE_1__.Tune, [_pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].key].concat(_toConsumableArray(Array(numChannels).fill([]))));\n    var channels = Array.from({\n      length: numChannels\n    }, function (_, i) {\n      return myTune[\"ch\".concat(i + 1)];\n    });\n    for (var i = 0; i < skeleton.length; i++) {\n      console.log(\"Voice number \".concat(i + 1));\n      skeleton[i].forEach(function (data, index) {\n        var note = new _encoder_js__WEBPACK_IMPORTED_MODULE_1__.Note([Math.round(data[0])],\n        // Frequency\n        [0],\n        // No accidentals\n        data[2],\n        // Duration\n        _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentInstrument,\n        // Oscillators\n        _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].harmonic1, _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].harmonic2, _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].step, _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filter, _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filter2, _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].width1, _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].width2, _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filterEnv, _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].lfoWave, _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].glideTime, data[1],\n        // Volume\n        _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].multiplier, _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].noiseLevel, _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].noiseState, _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ratio);\n        if (note) {\n          channels[i].push(note);\n        }\n      });\n    }\n    var songDataOutput = myTune.encode();\n    _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].songDataOutput = songDataOutput;\n    return songDataOutput;\n  });\n}\n\n\n//# sourceURL=webpack://PN/./src/wave/player.js?");

/***/ }),

/***/ "./src/wave/setProperties.js":
/*!***********************************!*\
  !*** ./src/wave/setProperties.js ***!
  \***********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setDuration: () => (/* binding */ setDuration),\n/* harmony export */   setHarmonic: () => (/* binding */ setHarmonic),\n/* harmony export */   setVolume: () => (/* binding */ setVolume)\n/* harmony export */ });\n/* harmony import */ var _pn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../pn.js */ \"./src/pn.js\");\n\n\n/**\n * Sets the duration for notes in the PN object.\n *\n * @param {number} duration - The duration of the note in seconds.\n *\n * @example\n * // Set the duration of notes to 1 second\n * setDuration(1);\n * console.log(PN.duration);  // Logs: 1\n */\nfunction setDuration(duration) {\n  _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].duration = duration;\n  console.log(\"Duration set to \".concat(duration, \" seconds\"));\n}\n\n/**\n * Sets the volume level for notes in the PN object.\n *\n * @param {number} volume - The volume level (e.g., between 0 and 1).\n *\n * @example\n * // Set the volume of notes to 0.75 (75% of max volume)\n * setVolume(0.75);\n * console.log(PN.volume);  // Logs: 0.75\n */\nfunction setVolume(volume) {\n  _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].volume = volume;\n  console.log(\"Volume level set to \".concat(volume));\n}\n\n/**\n * Sets the harmonic function for notes in the PN object.\n *\n * @param {function} harmonicFunc - The harmonic function to apply to the notes.\n *\n * @example\n * // Set the harmonic function to 'first'\n * PN.setHarmonic(first);\n * console.log(PN.harmonic);  // Logs: [function: first]\n */\nfunction setHarmonic(harmonicFunc) {\n  _pn_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].harmonic = harmonicFunc;\n  console.log(\"Harmonic function set \".concat(harmonicFunc));\n}\n\n\n//# sourceURL=webpack://PN/./src/wave/setProperties.js?");

/***/ }),

/***/ "./src/wave/synth.js":
/*!***************************!*\
  !*** ./src/wave/synth.js ***!
  \***************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateFrequency: () => (/* binding */ calculateFrequency),\n/* harmony export */   concat: () => (/* binding */ concat),\n/* harmony export */   getInputInstrument: () => (/* binding */ getInputInstrument),\n/* harmony export */   inKey: () => (/* binding */ inKey),\n/* harmony export */   inNote: () => (/* binding */ inNote),\n/* harmony export */   noteData: () => (/* binding */ noteData),\n/* harmony export */   noteData2: () => (/* binding */ noteData2),\n/* harmony export */   noteData3: () => (/* binding */ noteData3),\n/* harmony export */   rest: () => (/* binding */ rest),\n/* harmony export */   setInputInstrument: () => (/* binding */ setInputInstrument),\n/* harmony export */   whiteNoise: () => (/* binding */ whiteNoise)\n/* harmony export */ });\n/* harmony import */ var _harmonic_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./harmonic.js */ \"./src/wave/harmonic.js\");\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n// synth.js\n\n\nvar instrument;\n\n// Sample rate is assumed to be constant\nvar sampleRate = 44100,\n  bitDepth = 16,\n  numChannels = 2,\n  wavAudioFormat = 1,\n  tolerance = 1500;\n\n// Generate rest (silence) data for the specified duration\nfunction rest(duration) {\n  var restData = [];\n  var totalSamples = Math.floor(duration * sampleRate);\n  for (var i = 0; i < totalSamples; i++) {\n    restData.push(0); // Silence\n  }\n  return restData;\n}\n\n// Concatenates an array of note arrays\nfunction concat() {\n  for (var _len = arguments.length, notes = new Array(_len), _key = 0; _key < _len; _key++) {\n    notes[_key] = arguments[_key];\n  }\n  return notes.flat(); // Flatten all note arrays into one\n}\n\n// Calculate frequency from pitch step\nfunction semitone(frequency, step) {\n  return frequency * Math.pow(2, step / 12.0); // A440 standard\n}\nfunction applyGlide(targetFreq, currentFreq, glideTime, timeStep) {\n  var glideStep = (targetFreq - currentFreq) * (timeStep / glideTime);\n  return currentFreq + glideStep;\n}\nfunction whiteNoise(bool) {\n  if (bool === true) {\n    return Math.random() * 2 - 1;\n  }\n  return 1;\n}\nfunction mixing(osc1, osc2, a, b, c) {\n  return (osc1 * a + osc2 * b) / c;\n}\n\n// Returns the note data based on frequency, duration, envelope, harmonic, and volume\nfunction noteData(frequency, duration, envelope, harmonic1, harmonic2, step, filter, filter2, width1, width2, filterEnv, lfoWave, glideTime, volume, multiplier, noiseLevel, noiseState, ratio) {\n  var length = duration * sampleRate * multiplier;\n  var filterState = {\n    value: 0,\n    resonanceGain: 0\n  }; // Initial filter state\n\n  var data = Array.apply(null, Array(length)).map(function () {\n    return 0;\n  });\n  for (var i = 0; i < length; i++) {\n    var time = i / sampleRate;\n    //const x = volume * envelope(t , duration )* harmonic(frequency * t);\n    var frequency2 = semitone(frequency, step);\n    frequency = applyGlide(frequency, frequency, glideTime, 1 / sampleRate);\n    frequency2 = applyGlide(frequency2, frequency2, glideTime, 1 / sampleRate);\n    var oscillator1 = 0,\n      oscillator2 = 0;\n    if (harmonic1 == _harmonic_js__WEBPACK_IMPORTED_MODULE_0__.pulseWave) {\n      oscillator1 = harmonic1(frequency, time, width1);\n    } else {\n      oscillator1 = harmonic1(frequency * time);\n    }\n    var oscillator2 = 0;\n    if (harmonic2 == _harmonic_js__WEBPACK_IMPORTED_MODULE_0__.pulseWave) {\n      oscillator1 = harmonic2(frequency, time, width2);\n    } else {\n      oscillator2 = harmonic2(frequency2 * time);\n    }\n\n    // Mix the oscillators\n    var sample = mixing(oscillator1, oscillator2, ratio[0], ratio[1], ratio[2]) + noiseLevel * whiteNoise(noiseState);\n    // Apply LFO for vibrato\n    sample *= 1 + lfoWave(time);\n    var amplitude = filterEnv(time);\n    // Apply amlitude envelope to the cutoff frequency\n\n    sample = filter(sample, amplitude, sampleRate, filterState);\n    sample = filter2(sample, amplitude, sampleRate, filterState);\n    var amp = envelope(time, duration);\n    //console.log(sample,volume);\n    sample *= amp;\n    data[i] = sample * volume;\n  }\n  return data;\n}\n\n// Returns the note data based on frequency, duration, envelope, harmonic, and volume\nfunction noteData3(frequency, duration, envelope, harmonic1, harmonic2, step, filter, filter2, width1, width2, filterEnv, lfoWave, glideTime, volume, multiplier, noiseLevel, noiseState, ratio) {\n  var sampleRate = 44100; // Assuming a standard sample rate\n  var maxLength = Math.ceil(duration * sampleRate * multiplier);\n  var filterState = {\n    value: 0,\n    resonanceGain: 0\n  }; // Initial filter state\n\n  var data = [];\n  for (var i = 0; i < maxLength; i++) {\n    var time = i / sampleRate;\n    if (time >= duration) {\n      break;\n    }\n    var frequency2 = semitone(frequency, step);\n    frequency = applyGlide(frequency, frequency, glideTime, 1 / sampleRate);\n    frequency2 = applyGlide(frequency2, frequency2, glideTime, 1 / sampleRate);\n    var oscillator1 = 0,\n      oscillator2 = 0;\n    if (harmonic1 === _harmonic_js__WEBPACK_IMPORTED_MODULE_0__.pulseWave) {\n      oscillator1 = harmonic1(frequency, time, width1);\n    } else {\n      oscillator1 = harmonic1(frequency * time);\n    }\n    if (harmonic2 === _harmonic_js__WEBPACK_IMPORTED_MODULE_0__.pulseWave) {\n      oscillator2 = harmonic2(frequency, time, width2);\n    } else {\n      oscillator2 = harmonic2(frequency2 * time);\n    }\n\n    // Mix the oscillators\n    var sample = mixing(oscillator1, oscillator2, ratio[0], ratio[1], ratio[2]) + noiseLevel * whiteNoise(noiseState);\n\n    // Apply LFO for vibrato\n    sample *= 1 + lfoWave(time);\n    var amplitude = filterEnv(time);\n\n    // Apply amplitude envelope to the cutoff frequency\n    sample = filter(sample, amplitude, sampleRate, filterState);\n    sample = filter2(sample, amplitude, sampleRate, filterState);\n    var amp = envelope(time, duration);\n    sample *= amp;\n\n    // Scale by volume and store in the data array\n    data.push(sample * volume);\n  }\n  return data;\n}\nfunction frequencyScale(step) {\n  return 440.0 * Math.pow(2, step / 12.0);\n}\nfunction floorTowardsZero(num) {\n  console.log(Math.floor(num));\n  return Math.floor(num);\n}\nfunction noteData2(frequency, duration, envelope, harmonic, volume) {\n  var data = [];\n  for (var i = 0; i < duration; i += 1.0 / sampleRate) {\n    var x = Math.floor(volume * envelope(i, duration) * harmonic(frequency * i));\n    data.push(x);\n  }\n  return data;\n}\n\n// Check if the given note is in the key signature\nfunction inKey(keys, note) {\n  return keys.includes(note);\n}\n\n// Check if the note is part of the specified key\nfunction inNote(notes, note) {\n  return notes.includes(note);\n}\n\n// utils.js\n\n/**\n * Get the frequency of a note based on its distance from A4 (440 Hz).\n * @param {string} note - The note (e.g., 'C4', 'A4', 'G#5').\n * @returns {number} - The frequency of the note in Hz.\n */\nfunction calculateFrequency(note) {\n  var noteMap = {\n    C: -9,\n    \"C#\": -8,\n    D: -7,\n    \"D#\": -6,\n    E: -5,\n    F: -4,\n    \"F#\": -3,\n    G: -2,\n    \"G#\": -1,\n    A: 0,\n    \"A#\": 1,\n    B: 2\n  };\n  var noteUpper = note.toUpperCase();\n  var parsedNote = noteUpper.match(/^([A-G]#?)(\\d)$/);\n  if (!parsedNote) throw new Error(\"Invalid note format: \".concat(note));\n  var _parsedNote = _slicedToArray(parsedNote, 3),\n    noteName = _parsedNote[1],\n    octave = _parsedNote[2];\n  var semitoneDistance = noteMap[noteName] + (parseInt(octave) - 4) * 12;\n  return 440 * Math.pow(2, semitoneDistance / 12); // Frequency calculation\n}\n\n// Generate wave value based on oscillator type\nfunction generateWaveValue(type, frequency, time) {\n  var phase = 2 * Math.PI * frequency * time;\n  switch (type) {\n    case \"sine\":\n      return Math.sin(phase);\n    case \"triangle\":\n      return 2 * Math.abs(2 * (time * frequency - Math.floor(time * frequency + 0.5))) - 1;\n    case \"square\":\n      return Math.sign(Math.sin(phase));\n    case \"sawtooth\":\n      return 2 * (time * frequency - Math.floor(time * frequency + 0.5));\n    case \"n0\":\n      // White noise\n      return Math.random() * 2 - 1;\n    default:\n      return 0;\n    // Default to no contribution if unknown wave type\n  }\n}\n\n// Calculate AHDSR envelope value\nfunction calculateDynamicADSR(time, duration, a, d, s, r, h) {\n  var attackEnd = a;\n  var holdEnd = a + h;\n  var decayEnd = holdEnd + d;\n  var releaseStart = duration - r;\n  if (time < attackEnd) {\n    return time / a; // Attack phase (linear ramp)\n  } else if (time < holdEnd) {\n    return 1; // Hold phase (constant at peak)\n  } else if (time < decayEnd) {\n    return 1 - (time - holdEnd) / d * (1 - s); // Decay phase\n  } else if (time < releaseStart) {\n    return s; // Sustain phase\n  } else if (time <= duration) {\n    return s * (1 - (time - releaseStart) / r); // Release phase\n  } else {\n    return 0; // Beyond duration\n  }\n}\nfunction setInputInstrument(newInstrument) {\n  instrument = newInstrument;\n}\nfunction getInputInstrument() {\n  if (instrument === \"voice\") {\n    return \"voice\";\n  } else {\n    return \"note\";\n  }\n}\n\n//# sourceURL=webpack://PN/./src/wave/synth.js?");

/***/ }),

/***/ "./node_modules/js-yaml/dist/js-yaml.mjs":
/*!***********************************************!*\
  !*** ./node_modules/js-yaml/dist/js-yaml.mjs ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CORE_SCHEMA: () => (/* binding */ CORE_SCHEMA),\n/* harmony export */   DEFAULT_SCHEMA: () => (/* binding */ DEFAULT_SCHEMA),\n/* harmony export */   FAILSAFE_SCHEMA: () => (/* binding */ FAILSAFE_SCHEMA),\n/* harmony export */   JSON_SCHEMA: () => (/* binding */ JSON_SCHEMA),\n/* harmony export */   Schema: () => (/* binding */ Schema),\n/* harmony export */   Type: () => (/* binding */ Type),\n/* harmony export */   YAMLException: () => (/* binding */ YAMLException),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   dump: () => (/* binding */ dump),\n/* harmony export */   load: () => (/* binding */ load),\n/* harmony export */   loadAll: () => (/* binding */ loadAll),\n/* harmony export */   safeDump: () => (/* binding */ safeDump),\n/* harmony export */   safeLoad: () => (/* binding */ safeLoad),\n/* harmony export */   safeLoadAll: () => (/* binding */ safeLoadAll),\n/* harmony export */   types: () => (/* binding */ types)\n/* harmony export */ });\n\n/*! js-yaml 4.1.0 https://github.com/nodeca/js-yaml @license MIT */\nfunction isNothing(subject) {\n  return (typeof subject === 'undefined') || (subject === null);\n}\n\n\nfunction isObject(subject) {\n  return (typeof subject === 'object') && (subject !== null);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;\n  else if (isNothing(sequence)) return [];\n\n  return [ sequence ];\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nfunction isNegativeZero(number) {\n  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\n\n\nvar isNothing_1      = isNothing;\nvar isObject_1       = isObject;\nvar toArray_1        = toArray;\nvar repeat_1         = repeat;\nvar isNegativeZero_1 = isNegativeZero;\nvar extend_1         = extend;\n\nvar common = {\n\tisNothing: isNothing_1,\n\tisObject: isObject_1,\n\ttoArray: toArray_1,\n\trepeat: repeat_1,\n\tisNegativeZero: isNegativeZero_1,\n\textend: extend_1\n};\n\n// YAML error class. http://stackoverflow.com/questions/8458984\n\n\nfunction formatError(exception, compact) {\n  var where = '', message = exception.reason || '(unknown reason)';\n\n  if (!exception.mark) return message;\n\n  if (exception.mark.name) {\n    where += 'in \"' + exception.mark.name + '\" ';\n  }\n\n  where += '(' + (exception.mark.line + 1) + ':' + (exception.mark.column + 1) + ')';\n\n  if (!compact && exception.mark.snippet) {\n    where += '\\n\\n' + exception.mark.snippet;\n  }\n\n  return message + ' ' + where;\n}\n\n\nfunction YAMLException$1(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = formatError(this, false);\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n}\n\n\n// Inherit from Error\nYAMLException$1.prototype = Object.create(Error.prototype);\nYAMLException$1.prototype.constructor = YAMLException$1;\n\n\nYAMLException$1.prototype.toString = function toString(compact) {\n  return this.name + ': ' + formatError(this, compact);\n};\n\n\nvar exception = YAMLException$1;\n\n// get snippet for a single line, respecting maxLength\nfunction getLine(buffer, lineStart, lineEnd, position, maxLineLength) {\n  var head = '';\n  var tail = '';\n  var maxHalfLength = Math.floor(maxLineLength / 2) - 1;\n\n  if (position - lineStart > maxHalfLength) {\n    head = ' ... ';\n    lineStart = position - maxHalfLength + head.length;\n  }\n\n  if (lineEnd - position > maxHalfLength) {\n    tail = ' ...';\n    lineEnd = position + maxHalfLength - tail.length;\n  }\n\n  return {\n    str: head + buffer.slice(lineStart, lineEnd).replace(/\\t/g, '→') + tail,\n    pos: position - lineStart + head.length // relative position\n  };\n}\n\n\nfunction padStart(string, max) {\n  return common.repeat(' ', max - string.length) + string;\n}\n\n\nfunction makeSnippet(mark, options) {\n  options = Object.create(options || null);\n\n  if (!mark.buffer) return null;\n\n  if (!options.maxLength) options.maxLength = 79;\n  if (typeof options.indent      !== 'number') options.indent      = 1;\n  if (typeof options.linesBefore !== 'number') options.linesBefore = 3;\n  if (typeof options.linesAfter  !== 'number') options.linesAfter  = 2;\n\n  var re = /\\r?\\n|\\r|\\0/g;\n  var lineStarts = [ 0 ];\n  var lineEnds = [];\n  var match;\n  var foundLineNo = -1;\n\n  while ((match = re.exec(mark.buffer))) {\n    lineEnds.push(match.index);\n    lineStarts.push(match.index + match[0].length);\n\n    if (mark.position <= match.index && foundLineNo < 0) {\n      foundLineNo = lineStarts.length - 2;\n    }\n  }\n\n  if (foundLineNo < 0) foundLineNo = lineStarts.length - 1;\n\n  var result = '', i, line;\n  var lineNoLength = Math.min(mark.line + options.linesAfter, lineEnds.length).toString().length;\n  var maxLineLength = options.maxLength - (options.indent + lineNoLength + 3);\n\n  for (i = 1; i <= options.linesBefore; i++) {\n    if (foundLineNo - i < 0) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo - i],\n      lineEnds[foundLineNo - i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo - i]),\n      maxLineLength\n    );\n    result = common.repeat(' ', options.indent) + padStart((mark.line - i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n' + result;\n  }\n\n  line = getLine(mark.buffer, lineStarts[foundLineNo], lineEnds[foundLineNo], mark.position, maxLineLength);\n  result += common.repeat(' ', options.indent) + padStart((mark.line + 1).toString(), lineNoLength) +\n    ' | ' + line.str + '\\n';\n  result += common.repeat('-', options.indent + lineNoLength + 3 + line.pos) + '^' + '\\n';\n\n  for (i = 1; i <= options.linesAfter; i++) {\n    if (foundLineNo + i >= lineEnds.length) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo + i],\n      lineEnds[foundLineNo + i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo + i]),\n      maxLineLength\n    );\n    result += common.repeat(' ', options.indent) + padStart((mark.line + i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n';\n  }\n\n  return result.replace(/\\n$/, '');\n}\n\n\nvar snippet = makeSnippet;\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'multi',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'representName',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type$1(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new exception('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.options       = options; // keep original options in case user wants to extend this type later\n  this.tag           = tag;\n  this.kind          = options['kind']          || null;\n  this.resolve       = options['resolve']       || function () { return true; };\n  this.construct     = options['construct']     || function (data) { return data; };\n  this.instanceOf    = options['instanceOf']    || null;\n  this.predicate     = options['predicate']     || null;\n  this.represent     = options['represent']     || null;\n  this.representName = options['representName'] || null;\n  this.defaultStyle  = options['defaultStyle']  || null;\n  this.multi         = options['multi']         || false;\n  this.styleAliases  = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new exception('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nvar type = Type$1;\n\n/*eslint-disable max-len*/\n\n\n\n\n\nfunction compileList(schema, name) {\n  var result = [];\n\n  schema[name].forEach(function (currentType) {\n    var newIndex = result.length;\n\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag &&\n          previousType.kind === currentType.kind &&\n          previousType.multi === currentType.multi) {\n\n        newIndex = previousIndex;\n      }\n    });\n\n    result[newIndex] = currentType;\n  });\n\n  return result;\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {\n        scalar: {},\n        sequence: {},\n        mapping: {},\n        fallback: {},\n        multi: {\n          scalar: [],\n          sequence: [],\n          mapping: [],\n          fallback: []\n        }\n      }, index, length;\n\n  function collectType(type) {\n    if (type.multi) {\n      result.multi[type.kind].push(type);\n      result.multi['fallback'].push(type);\n    } else {\n      result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n    }\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\n\n\nfunction Schema$1(definition) {\n  return this.extend(definition);\n}\n\n\nSchema$1.prototype.extend = function extend(definition) {\n  var implicit = [];\n  var explicit = [];\n\n  if (definition instanceof type) {\n    // Schema.extend(type)\n    explicit.push(definition);\n\n  } else if (Array.isArray(definition)) {\n    // Schema.extend([ type1, type2, ... ])\n    explicit = explicit.concat(definition);\n\n  } else if (definition && (Array.isArray(definition.implicit) || Array.isArray(definition.explicit))) {\n    // Schema.extend({ explicit: [ type1, type2, ... ], implicit: [ type1, type2, ... ] })\n    if (definition.implicit) implicit = implicit.concat(definition.implicit);\n    if (definition.explicit) explicit = explicit.concat(definition.explicit);\n\n  } else {\n    throw new exception('Schema.extend argument should be a Type, [ Type ], ' +\n      'or a schema definition ({ implicit: [...], explicit: [...] })');\n  }\n\n  implicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n\n    if (type$1.loadKind && type$1.loadKind !== 'scalar') {\n      throw new exception('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n\n    if (type$1.multi) {\n      throw new exception('There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.');\n    }\n  });\n\n  explicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n  });\n\n  var result = Object.create(Schema$1.prototype);\n\n  result.implicit = (this.implicit || []).concat(implicit);\n  result.explicit = (this.explicit || []).concat(explicit);\n\n  result.compiledImplicit = compileList(result, 'implicit');\n  result.compiledExplicit = compileList(result, 'explicit');\n  result.compiledTypeMap  = compileMap(result.compiledImplicit, result.compiledExplicit);\n\n  return result;\n};\n\n\nvar schema = Schema$1;\n\nvar str = new type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) { return data !== null ? data : ''; }\n});\n\nvar seq = new type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) { return data !== null ? data : []; }\n});\n\nvar map = new type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) { return data !== null ? data : {}; }\n});\n\nvar failsafe = new schema({\n  explicit: [\n    str,\n    seq,\n    map\n  ]\n});\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nvar _null = new type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; },\n    empty:     function () { return '';     }\n  },\n  defaultStyle: 'lowercase'\n});\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n\n  var max = data.length;\n\n  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' ||\n         data === 'True' ||\n         data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nvar bool = new type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) { return object ? 'true' : 'false'; },\n    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n    camelcase: function (object) { return object ? 'True' : 'False'; }\n  },\n  defaultStyle: 'lowercase'\n});\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'o') {\n      // base 8\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isOctCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n  }\n\n  // base 10 (except 0)\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  return true;\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch;\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);\n    if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nvar int = new type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0o'  + obj.toString(8) : '-0o'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:[0-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nvar float = new type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n\nvar json = failsafe.extend({\n  implicit: [\n    _null,\n    bool,\n    int,\n    float\n  ]\n});\n\nvar core = json;\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nvar timestamp = new type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nvar merge = new type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n\n/*eslint-disable no-bitwise*/\n\n\n\n\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n\n  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return (bitlen % 8) === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx, tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = (bits << 6) | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    result.push((bits >> 16) & 0xFF);\n    result.push((bits >> 8) & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push((bits >> 10) & 0xFF);\n    result.push((bits >> 2) & 0xFF);\n  } else if (tailbits === 12) {\n    result.push((bits >> 4) & 0xFF);\n  }\n\n  return new Uint8Array(result);\n}\n\nfunction representYamlBinary(object /*, style*/) {\n  var result = '', bits = 0, idx, tail,\n      max = object.length,\n      map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 3 === 0) && idx) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[(bits >> 18) & 0x3F];\n    result += map[(bits >> 12) & 0x3F];\n    result += map[(bits >> 6) & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[(bits >> 10) & 0x3F];\n    result += map[(bits >> 4) & 0x3F];\n    result += map[(bits << 2) & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[(bits >> 2) & 0x3F];\n    result += map[(bits << 4) & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(obj) {\n  return Object.prototype.toString.call(obj) ===  '[object Uint8Array]';\n}\n\nvar binary = new type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\n\nvar _hasOwnProperty$3 = Object.prototype.hasOwnProperty;\nvar _toString$2       = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n\n  var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n\n    if (_toString$2.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty$3.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;\n        else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n    else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nvar omap = new type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\n\nvar _toString$1 = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    if (_toString$1.call(pair) !== '[object Object]') return false;\n\n    keys = Object.keys(pair);\n\n    if (keys.length !== 1) return false;\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    keys = Object.keys(pair);\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return result;\n}\n\nvar pairs = new type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\n\nvar _hasOwnProperty$2 = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty$2.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nvar set = new type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n\nvar _default = core.extend({\n  implicit: [\n    timestamp,\n    merge\n  ],\n  explicit: [\n    binary,\n    omap,\n    pairs,\n    set\n  ]\n});\n\n/*eslint-disable max-len,no-use-before-define*/\n\n\n\n\n\n\n\nvar _hasOwnProperty$1 = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State$1(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || _default;\n  this.onWarning = options['onWarning'] || null;\n  // (Hidden) Remove? makes the loader to expect YAML 1.1 documents\n  // if such documents have no explicit %YAML directive\n  this.legacy    = options['legacy']    || false;\n\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  // position of first leading tab in the current line,\n  // used to make sure there are no tabs in the indentation\n  this.firstTabInLine = -1;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  var mark = {\n    name:     state.filename,\n    buffer:   state.input.slice(0, -1), // omit trailing \\0\n    position: state.position,\n    line:     state.line,\n    column:   state.position - state.lineStart\n  };\n\n  mark.snippet = snippet(mark);\n\n  return new exception(message, mark);\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty$1.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    try {\n      prefix = decodeURIComponent(prefix);\n    } catch (err) {\n      throwError(state, 'tag prefix is malformed: ' + prefix);\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty$1.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode,\n  startLine, startLineStart, startPos) {\n\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty$1.call(overridableKeys, keyNode) &&\n        _hasOwnProperty$1.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.lineStart = startLineStart || state.lineStart;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n\n    // used for this specific key only because Object.defineProperty is slow\n    if (keyNode === '__proto__') {\n      Object.defineProperty(_result, keyNode, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: valueNode\n      });\n    } else {\n      _result[keyNode] = valueNode;\n    }\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n  state.firstTabInLine = -1;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      if (ch === 0x09/* Tab */ && state.firstTabInLine === -1) {\n        state.firstTabInLine = state.position;\n      }\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _lineStart,\n      _pos,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = Object.create(null),\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    } else if (ch === 0x2C/* , */) {\n      // \"flow collection entries can never be completely empty\", as per YAML 1.2, section 7.4\n      throwError(state, \"expected the node content, but found ','\");\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line; // Save the current line.\n    _lineStart = state.lineStart;\n    _pos = state.position;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _keyLine,\n      _keyLineStart,\n      _keyPos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = Object.create(null),\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (!atExplicitKey && state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else {\n      _keyLine = state.line;\n      _keyLineStart = state.lineStart;\n      _keyPos = state.position;\n\n      if (!composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n        // Neither implicit nor explicit notation.\n        // Reading is done. Go to the epilogue.\n        break;\n      }\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (atExplicitKey) {\n        _keyLine = state.line;\n        _keyLineStart = state.lineStart;\n        _keyPos = state.position;\n      }\n\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _keyLine, _keyLineStart, _keyPos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  try {\n    tagName = decodeURIComponent(tagName);\n  } catch (err) {\n    throwError(state, 'tag name is malformed: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty$1.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!_hasOwnProperty$1.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      typeList,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag === null) {\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = state.result;\n    }\n\n  } else if (state.tag === '?') {\n    // Implicit resolving is not allowed for non-scalar types, and '?'\n    // non-specific tag is only automatically assigned to plain scalars.\n    //\n    // We only need to check kind conformity in case user explicitly assigns '?'\n    // tag, for example like this: \"!<?> [0]\"\n    //\n    if (state.result !== null && state.kind !== 'scalar') {\n      throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n    }\n\n    for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n      type = state.implicitTypes[typeIndex];\n\n      if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        state.result = type.construct(state.result);\n        state.tag = type.tag;\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n        break;\n      }\n    }\n  } else if (state.tag !== '!') {\n    if (_hasOwnProperty$1.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n    } else {\n      // looking for multi type\n      type = null;\n      typeList = state.typeMap.multi[state.kind || 'fallback'];\n\n      for (typeIndex = 0, typeQuantity = typeList.length; typeIndex < typeQuantity; typeIndex += 1) {\n        if (state.tag.slice(0, typeList[typeIndex].tag.length) === typeList[typeIndex].tag) {\n          type = typeList[typeIndex];\n          break;\n        }\n      }\n    }\n\n    if (!type) {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n\n    if (state.result !== null && type.kind !== state.kind) {\n      throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n    }\n\n    if (!type.resolve(state.result, state.tag)) { // `state.result` updated in resolver if matched\n      throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n    } else {\n      state.result = type.construct(state.result, state.tag);\n      if (state.anchor !== null) {\n        state.anchorMap[state.anchor] = state.result;\n      }\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = Object.create(null);\n  state.anchorMap = Object.create(null);\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty$1.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State$1(input, options);\n\n  var nullpos = input.indexOf('\\0');\n\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  }\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll$1(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  var documents = loadDocuments(input, options);\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load$1(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new exception('expected a single document in the stream, but found more');\n}\n\n\nvar loadAll_1 = loadAll$1;\nvar load_1    = load$1;\n\nvar loader = {\n\tloadAll: loadAll_1,\n\tload: load_1\n};\n\n/*eslint-disable no-use-before-define*/\n\n\n\n\n\nvar _toString       = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar CHAR_BOM                  = 0xFEFF;\nvar CHAR_TAB                  = 0x09; /* Tab */\nvar CHAR_LINE_FEED            = 0x0A; /* LF */\nvar CHAR_CARRIAGE_RETURN      = 0x0D; /* CR */\nvar CHAR_SPACE                = 0x20; /* Space */\nvar CHAR_EXCLAMATION          = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE         = 0x22; /* \" */\nvar CHAR_SHARP                = 0x23; /* # */\nvar CHAR_PERCENT              = 0x25; /* % */\nvar CHAR_AMPERSAND            = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE         = 0x27; /* ' */\nvar CHAR_ASTERISK             = 0x2A; /* * */\nvar CHAR_COMMA                = 0x2C; /* , */\nvar CHAR_MINUS                = 0x2D; /* - */\nvar CHAR_COLON                = 0x3A; /* : */\nvar CHAR_EQUALS               = 0x3D; /* = */\nvar CHAR_GREATER_THAN         = 0x3E; /* > */\nvar CHAR_QUESTION             = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT        = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT         = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE        = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\n\nESCAPE_SEQUENCES[0x00]   = '\\\\0';\nESCAPE_SEQUENCES[0x07]   = '\\\\a';\nESCAPE_SEQUENCES[0x08]   = '\\\\b';\nESCAPE_SEQUENCES[0x09]   = '\\\\t';\nESCAPE_SEQUENCES[0x0A]   = '\\\\n';\nESCAPE_SEQUENCES[0x0B]   = '\\\\v';\nESCAPE_SEQUENCES[0x0C]   = '\\\\f';\nESCAPE_SEQUENCES[0x0D]   = '\\\\r';\nESCAPE_SEQUENCES[0x1B]   = '\\\\e';\nESCAPE_SEQUENCES[0x22]   = '\\\\\"';\nESCAPE_SEQUENCES[0x5C]   = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85]   = '\\\\N';\nESCAPE_SEQUENCES[0xA0]   = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\n\nvar DEPRECATED_BOOLEANS_SYNTAX = [\n  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n];\n\nvar DEPRECATED_BASE60_SYNTAX = /^[-+]?[0-9_]+(?::[0-9_]+)+(?:\\.[0-9_]*)?$/;\n\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n\n  if (map === null) return {};\n\n  result = {};\n  keys = Object.keys(map);\n\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n\n    if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n\n    result[tag] = style;\n  }\n\n  return result;\n}\n\nfunction encodeHex(character) {\n  var string, handle, length;\n\n  string = character.toString(16).toUpperCase();\n\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new exception('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\n\n\nvar QUOTING_TYPE_SINGLE = 1,\n    QUOTING_TYPE_DOUBLE = 2;\n\nfunction State(options) {\n  this.schema        = options['schema'] || _default;\n  this.indent        = Math.max(1, (options['indent'] || 2));\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid   = options['skipInvalid'] || false;\n  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys      = options['sortKeys'] || false;\n  this.lineWidth     = options['lineWidth'] || 80;\n  this.noRefs        = options['noRefs'] || false;\n  this.noCompatMode  = options['noCompatMode'] || false;\n  this.condenseFlow  = options['condenseFlow'] || false;\n  this.quotingType   = options['quotingType'] === '\"' ? QUOTING_TYPE_DOUBLE : QUOTING_TYPE_SINGLE;\n  this.forceQuotes   = options['forceQuotes'] || false;\n  this.replacer      = typeof options['replacer'] === 'function' ? options['replacer'] : null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n\n  this.tag = null;\n  this.result = '';\n\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n      position = 0,\n      next = -1,\n      result = '',\n      line,\n      length = string.length;\n\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n\n    if (line.length && line !== '\\n') result += ind;\n\n    result += line;\n  }\n\n  return result;\n}\n\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\n\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn’t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return  (0x00020 <= c && c <= 0x00007E)\n      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)\n      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== CHAR_BOM)\n      ||  (0x10000 <= c && c <= 0x10FFFF);\n}\n\n// [34] ns-char ::= nb-char - s-white\n// [27] nb-char ::= c-printable - b-char - c-byte-order-mark\n// [26] b-char  ::= b-line-feed | b-carriage-return\n// Including s-white (for some reason, examples doesn't match specs in this aspect)\n// ns-char ::= c-printable - b-line-feed - b-carriage-return - c-byte-order-mark\nfunction isNsCharOrWhitespace(c) {\n  return isPrintable(c)\n    && c !== CHAR_BOM\n    // - b-char\n    && c !== CHAR_CARRIAGE_RETURN\n    && c !== CHAR_LINE_FEED;\n}\n\n// [127]  ns-plain-safe(c) ::= c = flow-out  ⇒ ns-plain-safe-out\n//                             c = flow-in   ⇒ ns-plain-safe-in\n//                             c = block-key ⇒ ns-plain-safe-out\n//                             c = flow-key  ⇒ ns-plain-safe-in\n// [128] ns-plain-safe-out ::= ns-char\n// [129]  ns-plain-safe-in ::= ns-char - c-flow-indicator\n// [130]  ns-plain-char(c) ::=  ( ns-plain-safe(c) - “:” - “#” )\n//                            | ( /* An ns-char preceding */ “#” )\n//                            | ( “:” /* Followed by an ns-plain-safe(c) */ )\nfunction isPlainSafe(c, prev, inblock) {\n  var cIsNsCharOrWhitespace = isNsCharOrWhitespace(c);\n  var cIsNsChar = cIsNsCharOrWhitespace && !isWhitespace(c);\n  return (\n    // ns-plain-safe\n    inblock ? // c = flow-in\n      cIsNsCharOrWhitespace\n      : cIsNsCharOrWhitespace\n        // - c-flow-indicator\n        && c !== CHAR_COMMA\n        && c !== CHAR_LEFT_SQUARE_BRACKET\n        && c !== CHAR_RIGHT_SQUARE_BRACKET\n        && c !== CHAR_LEFT_CURLY_BRACKET\n        && c !== CHAR_RIGHT_CURLY_BRACKET\n  )\n    // ns-plain-char\n    && c !== CHAR_SHARP // false on '#'\n    && !(prev === CHAR_COLON && !cIsNsChar) // false on ': '\n    || (isNsCharOrWhitespace(prev) && !isWhitespace(prev) && c === CHAR_SHARP) // change to true on '[^ ]#'\n    || (prev === CHAR_COLON && cIsNsChar); // change to true on ':[^ ]'\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  // No support of ( ( “?” | “:” | “-” ) /* Followed by an ns-plain-safe(c)) */ ) part\n  return isPrintable(c) && c !== CHAR_BOM\n    && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n    && c !== CHAR_MINUS\n    && c !== CHAR_QUESTION\n    && c !== CHAR_COLON\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // | “#” | “&” | “*” | “!” | “|” | “=” | “>” | “'” | “\"”\n    && c !== CHAR_SHARP\n    && c !== CHAR_AMPERSAND\n    && c !== CHAR_ASTERISK\n    && c !== CHAR_EXCLAMATION\n    && c !== CHAR_VERTICAL_LINE\n    && c !== CHAR_EQUALS\n    && c !== CHAR_GREATER_THAN\n    && c !== CHAR_SINGLE_QUOTE\n    && c !== CHAR_DOUBLE_QUOTE\n    // | “%” | “@” | “`”)\n    && c !== CHAR_PERCENT\n    && c !== CHAR_COMMERCIAL_AT\n    && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Simplified test for values allowed as the last character in plain style.\nfunction isPlainSafeLast(c) {\n  // just not whitespace or colon, it will be checked to be plain character later\n  return !isWhitespace(c) && c !== CHAR_COLON;\n}\n\n// Same as 'string'.codePointAt(pos), but works in older browsers.\nfunction codePointAt(string, pos) {\n  var first = string.charCodeAt(pos), second;\n  if (first >= 0xD800 && first <= 0xDBFF && pos + 1 < string.length) {\n    second = string.charCodeAt(pos + 1);\n    if (second >= 0xDC00 && second <= 0xDFFF) {\n      // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n    }\n  }\n  return first;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\n\nvar STYLE_PLAIN   = 1,\n    STYLE_SINGLE  = 2,\n    STYLE_LITERAL = 3,\n    STYLE_FOLDED  = 4,\n    STYLE_DOUBLE  = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth,\n  testAmbiguousType, quotingType, forceQuotes, inblock) {\n\n  var i;\n  var char = 0;\n  var prevChar = null;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(codePointAt(string, 0))\n          && isPlainSafeLast(codePointAt(string, string.length - 1));\n\n  if (singleLineOnly || forceQuotes) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n            // Foldable line = too long, and not more-indented.\n            (i - previousLineBreak - 1 > lineWidth &&\n             string[previousLineBreak + 1] !== ' ');\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&\n      (i - previousLineBreak - 1 > lineWidth &&\n       string[previousLineBreak + 1] !== ' '));\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    if (plain && !forceQuotes && !testAmbiguousType(string)) {\n      return STYLE_PLAIN;\n    }\n    return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  if (!forceQuotes) {\n    return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n  }\n  return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    • No ending newline => unaffected; already using strip \"-\" chomping.\n//    • Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey, inblock) {\n  state.dump = (function () {\n    if (string.length === 0) {\n      return state.quotingType === QUOTING_TYPE_DOUBLE ? '\"\"' : \"''\";\n    }\n    if (!state.noCompatMode) {\n      if (DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1 || DEPRECATED_BASE60_SYNTAX.test(string)) {\n        return state.quotingType === QUOTING_TYPE_DOUBLE ? ('\"' + string + '\"') : (\"'\" + string + \"'\");\n      }\n    }\n\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1\n      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n      // No block styles in flow mode.\n      || (state.flowLevel > -1 && level >= state.flowLevel);\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth,\n      testAmbiguity, state.quotingType, state.forceQuotes && !iskey, inblock)) {\n\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string) + '\"';\n      default:\n        throw new exception('impossible error: invalid scalar style');\n    }\n  }());\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip =          string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : (clip ? '' : '-');\n\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = (function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }());\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while ((match = lineRe.exec(string))) {\n    var prefix = match[1], line = match[2];\n    moreIndented = (line[0] === ' ');\n    result += prefix\n      + (!prevMoreIndented && !moreIndented && line !== ''\n        ? '\\n' : '')\n      + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0, end, curr = 0, next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while ((match = breakRe.exec(line))) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = (curr > start) ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1;                    // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char = 0;\n  var escapeSeq;\n\n  for (var i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n    char = codePointAt(string, i);\n    escapeSeq = ESCAPE_SEQUENCES[char];\n\n    if (!escapeSeq && isPrintable(char)) {\n      result += string[i];\n      if (char >= 0x10000) result += string[i + 1];\n    } else {\n      result += escapeSeq || encodeHex(char);\n    }\n  }\n\n  return result;\n}\n\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level, value, false, false) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level, null, false, false))) {\n\n      if (_result !== '') _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\n\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level + 1, value, true, true, false, true) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level + 1, null, true, true, false, true))) {\n\n      if (!compact || _result !== '') {\n        _result += generateNextLine(state, level);\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\n\nfunction writeFlowMapping(state, level, object) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      pairBuffer;\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n\n    pairBuffer = '';\n    if (_result !== '') pairBuffer += ', ';\n\n    if (state.condenseFlow) pairBuffer += '\"';\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n\n    if (state.dump.length > 1024) pairBuffer += '? ';\n\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\n\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      explicitPair,\n      pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new exception('sortKeys must be a boolean or a function');\n  }\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n\n    if (!compact || _result !== '') {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n\n    explicitPair = (state.tag !== null && state.tag !== '?') ||\n                   (state.dump && state.dump.length > 1024);\n\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n\n    pairBuffer += state.dump;\n\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\n\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n\n    if ((type.instanceOf  || type.predicate) &&\n        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&\n        (!type.predicate  || type.predicate(object))) {\n\n      if (explicit) {\n        if (type.multi && type.representName) {\n          state.tag = type.representName(object);\n        } else {\n          state.tag = type.tag;\n        }\n      } else {\n        state.tag = '?';\n      }\n\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n\n        if (_toString.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new exception('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n\n        state.dump = _result;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey, isblockseq) {\n  state.tag = null;\n  state.dump = object;\n\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n\n  var type = _toString.call(state.dump);\n  var inblock = block;\n  var tagStr;\n\n  if (block) {\n    block = (state.flowLevel < 0 || state.flowLevel > level);\n  }\n\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n      duplicateIndex,\n      duplicate;\n\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n\n  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {\n    compact = false;\n  }\n\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && (Object.keys(state.dump).length !== 0)) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      if (block && (state.dump.length !== 0)) {\n        if (state.noArrayIndent && !isblockseq && level > 0) {\n          writeBlockSequence(state, level - 1, state.dump, compact);\n        } else {\n          writeBlockSequence(state, level, state.dump, compact);\n        }\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey, inblock);\n      }\n    } else if (type === '[object Undefined]') {\n      return false;\n    } else {\n      if (state.skipInvalid) return false;\n      throw new exception('unacceptable kind of an object to dump ' + type);\n    }\n\n    if (state.tag !== null && state.tag !== '?') {\n      // Need to encode all characters except those allowed by the spec:\n      //\n      // [35] ns-dec-digit    ::=  [#x30-#x39] /* 0-9 */\n      // [36] ns-hex-digit    ::=  ns-dec-digit\n      //                         | [#x41-#x46] /* A-F */ | [#x61-#x66] /* a-f */\n      // [37] ns-ascii-letter ::=  [#x41-#x5A] /* A-Z */ | [#x61-#x7A] /* a-z */\n      // [38] ns-word-char    ::=  ns-dec-digit | ns-ascii-letter | “-”\n      // [39] ns-uri-char     ::=  “%” ns-hex-digit ns-hex-digit | ns-word-char | “#”\n      //                         | “;” | “/” | “?” | “:” | “@” | “&” | “=” | “+” | “$” | “,”\n      //                         | “_” | “.” | “!” | “~” | “*” | “'” | “(” | “)” | “[” | “]”\n      //\n      // Also need to encode '!' because it has special meaning (end of tag prefix).\n      //\n      tagStr = encodeURI(\n        state.tag[0] === '!' ? state.tag.slice(1) : state.tag\n      ).replace(/!/g, '%21');\n\n      if (state.tag[0] === '!') {\n        tagStr = '!' + tagStr;\n      } else if (tagStr.slice(0, 18) === 'tag:yaml.org,2002:') {\n        tagStr = '!!' + tagStr.slice(18);\n      } else {\n        tagStr = '!<' + tagStr + '>';\n      }\n\n      state.dump = tagStr + ' ' + state.dump;\n    }\n  }\n\n  return true;\n}\n\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n      duplicatesIndexes = [],\n      index,\n      length;\n\n  inspectNode(object, objects, duplicatesIndexes);\n\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\n\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList,\n      index,\n      length;\n\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\n\nfunction dump$1(input, options) {\n  options = options || {};\n\n  var state = new State(options);\n\n  if (!state.noRefs) getDuplicateReferences(input, state);\n\n  var value = input;\n\n  if (state.replacer) {\n    value = state.replacer.call({ '': value }, '', value);\n  }\n\n  if (writeNode(state, 0, value, true, true)) return state.dump + '\\n';\n\n  return '';\n}\n\nvar dump_1 = dump$1;\n\nvar dumper = {\n\tdump: dump_1\n};\n\nfunction renamed(from, to) {\n  return function () {\n    throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' +\n      'Use yaml.' + to + ' instead, which is now safe by default.');\n  };\n}\n\n\nvar Type                = type;\nvar Schema              = schema;\nvar FAILSAFE_SCHEMA     = failsafe;\nvar JSON_SCHEMA         = json;\nvar CORE_SCHEMA         = core;\nvar DEFAULT_SCHEMA      = _default;\nvar load                = loader.load;\nvar loadAll             = loader.loadAll;\nvar dump                = dumper.dump;\nvar YAMLException       = exception;\n\n// Re-export all types in case user wants to create custom schema\nvar types = {\n  binary:    binary,\n  float:     float,\n  map:       map,\n  null:      _null,\n  pairs:     pairs,\n  set:       set,\n  timestamp: timestamp,\n  bool:      bool,\n  int:       int,\n  merge:     merge,\n  omap:      omap,\n  seq:       seq,\n  str:       str\n};\n\n// Removed functions from JS-YAML 3.0.x\nvar safeLoad            = renamed('safeLoad', 'load');\nvar safeLoadAll         = renamed('safeLoadAll', 'loadAll');\nvar safeDump            = renamed('safeDump', 'dump');\n\nvar jsYaml = {\n\tType: Type,\n\tSchema: Schema,\n\tFAILSAFE_SCHEMA: FAILSAFE_SCHEMA,\n\tJSON_SCHEMA: JSON_SCHEMA,\n\tCORE_SCHEMA: CORE_SCHEMA,\n\tDEFAULT_SCHEMA: DEFAULT_SCHEMA,\n\tload: load,\n\tloadAll: loadAll,\n\tdump: dump,\n\tYAMLException: YAMLException,\n\ttypes: types,\n\tsafeLoad: safeLoad,\n\tsafeLoadAll: safeLoadAll,\n\tsafeDump: safeDump\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (jsYaml);\n\n\n\n//# sourceURL=webpack://PN/./node_modules/js-yaml/dist/js-yaml.mjs?");

/***/ }),

/***/ "./src/pitchFrequencies.json":
/*!***********************************!*\
  !*** ./src/pitchFrequencies.json ***!
  \***********************************/
/***/ ((module) => {

eval("module.exports = /*#__PURE__*/JSON.parse('{\"C1\":32.7,\"C1#\":34.65,\"D1\":36.71,\"D1b\":38.89,\"E1\":41.2,\"F1\":43.65,\"F1#\":46.25,\"G1\":49,\"G1b\":51.91,\"A1\":55,\"A1#\":58.27,\"B1\":61.74,\"C2\":65.41,\"C2#\":69.3,\"D2\":73.42,\"D2b\":77.78,\"E2\":82.41,\"F2\":87.31,\"F2#\":92.5,\"G2\":98,\"G2b\":103.83,\"A2\":110,\"A2#\":116.54,\"B2\":123.47,\"C3\":130.81,\"C3#\":138.59,\"D3\":146.83,\"D3b\":155.56,\"E3\":164.81,\"F3\":174.61,\"F3#\":185,\"G3\":196,\"G3b\":207.65,\"A3\":220,\"A3#\":233.08,\"B3\":246.94,\"C4\":261.63,\"C4#\":277.18,\"D4\":293.66,\"D4b\":311.13,\"E4\":329.63,\"F4\":349.23,\"F4#\":369.99,\"G4\":392,\"G4b\":415.3,\"A4\":440,\"A4#\":466.16,\"B4\":493.88,\"C5\":523.25,\"C5#\":554.37,\"D5\":587.33,\"D5b\":622.25,\"E5\":659.25,\"F5\":698.46,\"F5#\":739.99,\"G5\":783.99,\"G5b\":830.61,\"A5\":880,\"A5#\":932.33,\"B5\":987.77,\"C6\":1046.5,\"C6#\":1108.73,\"D6\":1174.66,\"D6b\":1244.51,\"E6\":1318.51,\"F6\":1396.91,\"F6#\":1479.98,\"G6\":1567.98,\"G6b\":1661.22,\"A6\":1760,\"A6#\":1864.66,\"B6\":1975.53,\"C7\":2093,\"C7#\":2217.46,\"D7\":2349.32,\"D7b\":2489.02,\"E7\":2637.02,\"F7\":2793.83,\"F7#\":2959.96,\"G7\":3135.96,\"G7b\":3322.44,\"A7\":3520,\"A7#\":3729.31,\"B7\":3951.07,\"C8\":4186.01}');\n\n//# sourceURL=webpack://PN/./src/pitchFrequencies.json?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});